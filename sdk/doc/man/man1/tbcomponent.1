.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "tbcomponent" "1" "2020-07-31" "Tbricks" "tbcomponent man page"
.hy
.SH NAME
.PP
\f[C]tbcomponent\f[R] \[en] configures Tbricks system components.
.SH SYNOPSIS
.PP
\f[C]tbcomponent\f[R] [\f[C]help\f[R]]
.PP
\f[C]tbcomponent create\f[R] [\f[C]-f\f[R]] <component_type>
<component_name> <release> [<node>] [<system>]
.PP
\f[C]tbcomponent create\f[R] <release>
.PP
\f[C]tbcomponent clean\f[R] <component>[ <component>\&...]
.PP
\f[C]tbcomponent destroy\f[R] [\f[C]-f\f[R]] <component>[
<component>\&...]
.PP
\f[C]tbcomponent enable\f[R] [\f[C]-n\f[R]] [\f[C]-f\f[R]] <component>[
<component>\&...]
.PP
\f[C]tbcomponent disable\f[R] [\f[C]-w\f[R] <time-out> ] [\f[C]-n\f[R]]
[\f[C]-f\f[R]] <component>[ <component>\&...]
.PP
\f[C]tbcomponent list|ls\f[R] [<component>|<system>]
.PP
\f[C]tbcomponent info\f[R] <component>
.PP
\f[C]tbcomponent relocate\f[R] [\f[C]-f\f[R]] [\f[C]-c\f[R]] <component>
<node>
.PP
\f[C]tbcomponent set\f[R] [\f[C]-f\f[R]] <property>=<value> <component>[
<component>\&...]
.PP
\f[C]tbcomponent setonce\f[R] <property>=<value> <component>[
<component>\&...]
.PP
\f[C]tbcomponent clear\f[R] <property>[ <property>\&...] <component>[
<component>\&...]
.PP
\f[C]tbcomponent get\f[R] [<property>[,<property>\&...]] [<component>[
<component>\&...]]
.PP
\f[C]tbcomponent get -R\f[R] <property>[,<property>\&...] [<component>]
.PP
\f[C]tbcomponent getenv\f[R] [<variable>[,<variable>\&...]]
[<component>[ <component>\&...]]
.PP
\f[C]tbcomponent setenv\f[R] <variable>=<value> <component>[
<component>\&...]
.PP
\f[C]tbcomponent clearenv\f[R] <variable>[,<variable>\&...] <component>[
<component>\&...]
.PP
\f[C]tbcomponent start\f[R] [\f[C]-w\f[R] <time-out>] <component>[
<component>\&...]
.PP
\f[C]tbcomponent stop\f[R] [\f[C]-w\f[R] <time-out>] [\f[C]-f\f[R]]
<component>[ <component>\&...]
.PP
\f[C]tbcomponent restart\f[R] [\f[C]-w\f[R] <time-out>] [\f[C]-f\f[R]]
<component>[ <component>\&...]
.PP
\f[C]tbcomponent upgrade\f[R] <component>[ <component>\&...] <release>[
<release>\&...]
.PP
\f[C]tbcomponent upgrade\f[R] <component_type> <system> <release>[
<release>\&...]
.PP
\f[C]tbcomponent history\f[R] [\f[C]-k date\f[R] <date_from>]
[<component>[ <component>\&...]]
.SH DESCRIPTION
.PP
The \f[C]tbcomponent\f[R] command configures system components that
correspond to one or more processes running on a node.
.PP
Each component provides a set of services to the system, each giving
specific functionality.
A component can also be configured to provide services to multiple
systems simultaneously, something which is commonly used in ASP setups.
.PP
It also provides common properties that services implemented by the
component can inherit, such as root paths (see \f[C]tbintro\f[R](1) for
details).
.PP
The tool will automatically create a default service (set of services)
when creating a component as relevant for the component type.
.SS Identifiers
.PP
Please see \f[C]tbintro\f[R](1) for information about the identifiers
used.
.SS Properties
.PP
Every component has a set of properties as defined below.
.PP
The identifier provides a persistent unique identifier (a UUID), that is
assigned at creation time.
It is typically used for cross references and/or scripts requiring the
identifier to never change.
The identifier cannot be changed by a user.
.TP
\f[B]\f[CB]identifier\f[B]\f[R]
The UUID uniquely identifying the component.
.PP
\f[B]The following properties can be set by a user:\f[R]
.TP
\f[B]\f[CB]short_name\f[B]\f[R]
A short name that is used to identify the component.
.TP
\f[B]\f[CB]node\f[B]\f[R]
A node identifier that specifies where the component should run, this
can only be changed by using the \f[C]tbcomponent relocate\f[R] command.
It can either be the node short name, or its node identifier UUID.
.TP
\f[B]\f[CB]component_type\f[B]\f[R]
The type of component.
The value must match one of the types of the
\f[C]tbcomponent list -a\f[R] command output.
.TP
\f[B]\f[CB]system\f[B]\f[R]
The primary system from which the component inherits storage paths for
components requiring storage per-component.
To move the storage for the specific component to a different location,
e.g.\ for an ASP setup, it is recommended to configure an empty system
with the appropriate path properties.
.TP
\f[B]\f[CB]disabled\f[B]\f[R]
Whether this component should be disabled and not started as part of a
system.
The state in \f[C]tbcomponent list\f[R] will be shown as Disabled.
.TP
\f[B]\f[CB]auto_restart\f[B]\f[R]
Whether this component should not be started upon its unexpected exit or
crash.
.TP
\f[B]\f[CB]upgrade_at_startup\f[B]\f[R]
Whether this component database should be upgraded on its next start.
This property could only be set for the next start of the component with
the \f[C]setonce\f[R] subcommand.
To schedule the database for upgrading, set the value to either
\f[C]yes\f[R], \f[C]true\f[R], \f[C]on\f[R], \f[C]Y\f[R] or \f[C]1\f[R].
.PP
\f[B]The following properties specify display attributes for the
component:\f[R]
.TP
\f[B]\f[CB]name\f[B]\f[R]
The display name of the component.
.RS
.PP
The default name is the component type separated by spaces.
.RE
.TP
\f[B]\f[CB]description\f[B]\f[R]
A longer description of the component and its intended usage.
.RS
.PP
The description is not set by default
.RE
.PP
\f[B]The following properties specify days and times for the component
start and stop:\f[R]
.TP
\f[B]\f[CB]start_time\f[B]\f[R]
The start time for the component.
The default start time differs per component type, but most services use
\f[C]00:00\f[R] as their start time.
.TP
\f[B]\f[CB]stop_time\f[B]\f[R]
The stop time for the component.
The default stop time differs per component type, but most services use
\f[C]00:00\f[R] as their stop time.
.TP
\f[B]\f[CB]start_days\f[B]\f[R]
The days when the component should be started.
The default differs per component type, but most services use
\f[C]Monday\f[R] as their start day allowing for 24x6 operation.
.TP
\f[B]\f[CB]stop_days\f[B]\f[R]
The days when the component should be stopped.
The default differs per component type, but most services use
\f[C]Sunday\f[R] as their stop day allowing for 24x6 operation.
.PP
The component will be started on the specified start time at the
specified start days and stopped accordingly.
.PP
Times are expressed as HH:MM.
.PP
Possible days are the following:
.IP \[bu] 2
\f[C]Everyday\f[R]: All days
.IP \[bu] 2
\f[C]Weekday\f[R]: Monday-Friday
.IP \[bu] 2
\f[C]Never\f[R]: Never
.IP \[bu] 2
\f[C]Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday\f[R]: The
specified day.
.PP
\f[B]Logging properties:\f[R]
.TP
\f[B]\f[CB]log_level_persisted\f[B]\f[R]
This is the level of which logs are persisted.
The available levels are: \f[C]off\f[R], \f[C]critical\f[R],
\f[C]error\f[R], \f[C]warning\f[R], \f[C]notice\f[R], \f[C]status\f[R],
\f[C]debug\f[R], and \f[C]dump\f[R].
.RS
.PP
The log level to persist is not set by default.
.PP
Note that you need to restart the component for any changes to take
effect.
.RE
.TP
\f[B]\f[CB]log_level_flush\f[B]\f[R]
This is the level at which component logs are flushed after being
persisted.
For list of available levels, see log_level_persisted above.
.TP
\f[B]\f[CB]unlimited_logs\f[B]\f[R]
Unlimited log messages will be locally cached in memory before the
internal logging framework start discarding new low-priority log
messages.
In fact, this limit only applies when running tblog with the debug/dump
or fulldump severity levels.
If the disk subsystem keeps up, this should never happen.
When the service catches up to half this level, it will stop discarding
messages.
.RS
.PP
The default value is false, which means that up to 50.000 log entries
are buffered internally.
.RE
.PP
\f[B]Persistence properties:\f[R]
.TP
\f[B]\f[CB]bdb_transaction_mode\f[B]\f[R]
The several different modes are supported for transactions.
Each of them has different performance characteristics and durability
guarantees.
But even when running with a lower durability guarantee, many services
will synchronize and recover their state correctly after a restart
regardless.
Please refer to the service-specific documentation for additional notes
on actual behavior in this regard.
.PP
\f[B]The following levels are supported:\f[R]
.TP
\f[B]\f[CB]sync_to_disk\f[B]\f[R]
All transaction are written to the disk before the transaction is done.
This guarantees that every transaction written will be recovered even
after a failure of the operating system or hardware.
This transaction mode can have significant performance impact as it is
disk-write-speed (with sync) bounded and is primarily recommended to be
used for critical data and in conjunction with disk subsystems that have
battery-backed up cache or SSD.
.TP
\f[B]\f[CB]sync_to_os\f[B]\f[R]
All transaction are written to the operating system kernel buffer before
the transaction is done.
This guarantees that every transaction written will be recovered after
an application crash.
This transaction mode gives a good tradeoff between performance and
resiliency and is the default mode used by most services.
Using this mode can give a significant performance improvement over
sync_to_disk.
.TP
\f[B]\f[CB]buffered\f[B]\f[R]
Multiple transactions are buffered into one write to the operating
system.
This means that a number of transactions (depending on the size of the
log buffer) may be lost during recovery, but with significantly better
performance.
This is quite acceptable for services that are not the original source
of information and that can resynchronize any lost data during restart.
This mode gives excellent performance and is the default mode used by
services that can resynchronize their state from external sources.
The number of transactions at risk is governed by how often the system
flushes dirty buffers to disk and how often the log is checkpointed.
Using this mode can give a significant performance improvement over
sync_to_os.
.TP
\f[B]\f[CB]bdb_cache_size\f[B]\f[R]
Specifically set the cache size used by the database backing store, this
will typically be automatically calculated depending on the amount of
RAM available and the kind of service, but it may be useful to tune for
machines with unusual memory configurations / requirements.
Default formula for calculating cache size is amount of physical RAM
divided by 8.
.PP
\f[B]The following properties specifying root paths are used by
components:\f[R]
.TP
\f[B]\f[CB]fast_persistence_used\f[B]\f[R]
Set to true if the fast_persistence paths should be used for databases
for this component.
It is used to make sure that I/O dependent component is allowed to store
on e.g.\ SSD devices.
It is set to true by default for TR and IS services at creation time.
.TP
\f[B]\f[CB]tmp_root\f[B]\f[R]
The root path under which services configured in this component should
persist small temporary files.
This is typically a tmpfs based backend (such as \f[C]/tmp/\f[R]).
This overrides any settings for the node.
The \f[C]tmp_root\f[R] path is not set by default.
.PP
\f[B]The following properties specifying the actual paths are used by
the component for storage (if any):\f[R]
.TP
\f[B]\f[CB]tmp_path\f[B]\f[R]
The path under which small temporary files should be persisted.
By default, the tmp path is evaluated to the tmp_root+identifier if it
is not explicitly set.
.SH SUBCOMMANDS
.PP
All subcommands that modify state are logged persistently to the history
log in their original form.
.PP
The \f[C]tbcomponent\f[R] command provides subcommands to create and
destroy components, set properties for components, and provide
information about the available components and their status.
.PP
\f[B]The following subcommands are supported:\f[R]
.TP
\f[B]\f[CB]tbcomponent\f[B]\f[R] [\f[B]\f[CB]help\f[B]\f[R]]
Displays usage of the tool, including available subcommands and options.
.TP
\f[B]\f[CB]tbcomponent create\f[B]\f[R] [\f[B]\f[CB]-f\f[B]\f[R]] <component_type> <component_name> <release> [<node>] [<system>]
Creates a new Tbricks component of the given type with the specified
short name.
Note that the short name must be unique.
The <release> argument corresponds to the release that component will be
based on.
The component will be created with its default services.
The component will be allocated to the specified node.
All services will be created in the \[lq]default\[rq] subsystem.
If the system is specified, all services created for the component will
be allocated to this system during creation.
The corresponding default services are created for the components as
well.
.RS
.PP
\f[C]-f\f[R] switch forces creation of deprecated components.
.RE
.TP
\f[B]\f[CB]tbcomponent create\f[B]\f[R] <release>
Prints a list of all available component types that can be created from
the specified release.
.TP
\f[B]\f[CB]tbcomponent clean\f[B]\f[R] <component>[ <component>\&...]
Removes all databases for all services of the component, essentially
resetting it to \[lq]factory default\[rq].
.TP
\f[B]\f[CB]tbcomponent destroy\f[B]\f[R] [\f[B]\f[CB]-f\f[B]\f[R]] <component>[ <component>\&...]
Destroys the given components and removes them permanently.
This will destroy all databases and services configured for the
component as well.
.RS
.PP
\f[C]-f\f[R] switch forces component to be destroyed even if the node is
offline.
Note that it is very dangerous because databases will not be removed and
the component will work uncontrollably if the node returns online.
.RE
.TP
\f[B]\f[CB]tbcomponent enable\f[B]\f[R] [\f[B]\f[CB]-n\f[B]\f[R]] [\f[B]\f[CB]-f\f[B]\f[R]] <component>[ <component>\&...]
Enables the specified components.
.RS
.PP
\f[C]-n\f[R] switch disables execution of \f[C]tbsystemvalidate\f[R].
.PP
\f[C]-f\f[R] switch forces immediate start of the components.
.RE
.TP
\f[B]\f[CB]tbcomponent disable\f[B]\f[R] [\f[B]\f[CB]-w\f[B]\f[R] <time-out>] [\f[B]\f[CB]-n\f[B]\f[R]] [\f[B]\f[CB]-f\f[B]\f[R]] <component>[ <component>\&...]
Disables the specified components.
.RS
.PP
\f[C]-w\f[R] switch affects when disabling a running component.
It is used to unconditionally terminate component stopping after the
time is out even in case component is still stopping.
The time value has to be specified in human-readable form such as
\[lq]1h\[rq] or \[lq]1m 30s\[rq].
The following abbreviations are supported: w, d, h, m, s.
Default value is 61 minutes.
.PP
\f[C]-n\f[R] switch disables execution of \f[C]tbsystemvalidate\f[R].
.PP
\f[C]-f\f[R] switch forces shutdown of running components.
.RE
.TP
\f[B]\f[CB]tbcomponent list\f[B]\f[R] | \f[B]\f[CB]ls\f[B]\f[R] [<component>|<system>]
Lists components with detailed information.
By default it lists only configured components.
.RS
.PP
If the optional argument matches a component, detailed information about
only this component will be displayed.
.PP
If the optional argument matches a system name, the list of components
configured for this system will be displayed.
.RE
.TP
\f[B]\f[CB]tbcomponent info\f[B]\f[R] <component>
Prints additional information about component, e.g.\ resource
associations, Speedcore contents.
.TP
\f[B]\f[CB]tbcomponent relocate\f[B]\f[R] [\f[B]\f[CB]-c\f[B]\f[R]] [\f[B]\f[CB]-f\f[B]\f[R]] <component> <node>
Relocates the component to the specified node.
This command first checks that the component is not running and the
source and destination nodes are up, then it moves the component
persistence to the destination node.
After that, it changes the system configuration to run the component on
the specified node at the next start of the component.
If the component is already configured for this node, no actions will be
performed.
If a component is relocated by mistake, you can relocate it back to the
original node, except the case when the component has been forcibly
relocated from an offline node.
.RS
.PP
Component relocation may take some time to complete.
Please do not restart Admin Center and Admin Agents on source and
destination nodes during the relocation.
.PP
\f[C]-f\f[R] switch forces component to be relocated even if the source
node is offline.
Note that it is very dangerous since component persistence will NOT be
moved.
Force relocation may also result in multiple instances of the component
running simultaneously if the source node has lost connection to AC and
is not physically down.
In this case, instance of the component on the source node will be
automatically stopped when the node reconnects to Admin Center.
Force relocation is irreversible, that is, you cannot relocate component
back to the offline node.
.PP
\f[C]-c\f[R] switch disables persistence compression for the relocation.
If the connection between source and destination node is fast, this can
improve relocation speed.
.RE
.TP
\f[B]\f[CB]tbcomponent set\f[B]\f[R] [\f[B]\f[CB]-f\f[B]\f[R]] <property>=<value> <component>[ <component>\&...]
Sets the property to the specified value for the specified components.
Only some properties can be edited.
See the \f[B]Properties\f[R] section for more information on available
properties and their values.
.RS
.PP
\f[C]-f\f[R] switch forces property to be set even if the value is
rejected by consistency checks.
.RE
.TP
\f[B]\f[CB]tbcomponent setonce\f[B]\f[R] [\f[B]\f[CB]-f\f[B]\f[R]] <property>=<value> <component>[ <component>\&...]
Sets the property to the specified value for the specified components
and clears it after the next restart of the component.
This is useful for configuration properties that one wants to set
temporarily (like resetting sequence numbers).
Only some properties can be edited.
See the \f[B]Properties\f[R] section for more information on available
properties and their values.
.RS
.PP
\f[C]-f\f[R] switch forces property to be set even if the value is
rejected by consistency checks.
.RE
.TP
\f[B]\f[CB]tbcomponent clear\f[B]\f[R] <property>[ <property>\&...] <component>[ <component>\&...]
Clears values of the specified properties for the specified components.
.TP
\f[B]\f[CB]tbcomponent get\f[B]\f[R] [<property>[,<property>\&...]] [<component>[ <component>\&...]]
Displays the specified properties for the specified components.
.RS
.PP
If no properties are specified, all properties for the specified
components are displayed.
.PP
If no components are specified, specified properties for all components
are displayed.
.PP
If neither properties nor components are specified, all properties for
all components are displayed.
.PP
\f[C]-R\f[R] switch is used to get properties of a component, system,
and node on which the component is located.
.RE
.TP
\f[B]\f[CB]tbcomponent get -R\f[B]\f[R] <property>[,<property>\&...] <component>
With the \f[C]-R\f[R] switch, the command displays the properties of the
specified component, system, and node on which this component is
located.
.TP
\f[B]\f[CB]tbcomponent getenv\f[B]\f[R] [<variable>[,<variable>\&...]] [<component>[ <component>\&...]]
Displays environment variables for processes of the specified
components.
If no components are specified, environment variables for all components
are displayed.
.TP
\f[B]\f[CB]tbcomponent setenv\f[B]\f[R] <variable>=<value> <component>[ <component>\&...]
Sets the environment variable to the specified value for the specified
components.
.TP
\f[B]\f[CB]tbcomponent clearenv\f[B]\f[R] <variable>[,<variable>\&...] <component>[ <component>\&...]
Clears specified environment variables for the specified components.
.TP
\f[B]\f[CB]tbcomponent start\f[B]\f[R] [\f[B]\f[CB]-w\f[B]\f[R] <time-out>] <component>[ <component>\&...]
Starts the specified components and all of their services.
.RS
.PP
\f[C]-w\f[R] switch is used to unconditionally release execution flow
after the time is out even if the component is still running.
The time value must be specified in human-readable form such as
\f[C]1h\f[R] or \f[C]1m 30s\f[R].
The following abbreviations are supported: w, d, h, m, s.
Default value is 61 minutes.
.RE
.TP
\f[B]\f[CB]tbcomponent stop\f[B]\f[R] [\f[B]\f[CB]-w\f[B]\f[R] <time-out>] [\f[B]\f[CB]-f\f[B]\f[R]] <component>[ <component>\&...]
Stops the specified components and all of their services.
.RS
.PP
\f[C]-f\f[R] switch forces shutdown.
For the stopped components, collects information on opened files/file
descriptors, three stacks, network load, and CPU load.
If lsof presents in a system, it is used for information logging,
otherwise procfs is used.
Information is collected to the
\f[C]/cores/\f[R]<component>.<pid>.\f[C]pstack.force_stop\f[R]
directory.
Set the \f[C]TBRICKS_AA_SAVE_STACKS_ON_FORCE_STOP\f[R] environment
variable to \f[C]false\f[R] for Admin Agent to disable collection.
.PP
\f[C]-w\f[R] switch is used to unconditionally release execution flow
after the time is out even if the component is still running.
The time value must be specified in human-readable form such as
\f[C]1h\f[R] or \f[C]1m 30s\f[R].
The following abbreviations are supported: w, d, h, m, s.
Default value is 61 minutes.
.RE
.TP
\f[B]\f[CB]tbcomponent restart\f[B]\f[R] [\f[B]\f[CB]-w\f[B]\f[R] <time-out>] [\f[B]\f[CB]-f\f[B]\f[R]] <component>[ <component>\&...]
Restarts the specified components and all of their services.
.RS
.PP
\f[C]-f\f[R] switch forces component shutdown before start.
.PP
\f[C]-w\f[R] switch is used to unconditionally release execution flow
after the time is out even if the component is still running.
The time value must be specified in human-readable form such as
\f[C]1h\f[R] or \f[C]1m 30s\f[R].
The following abbreviations are supported: w, d, h, m, s.
Default value is 61 minutes.
.RE
.TP
\f[B]\f[CB]tbcomponent upgrade\f[B]\f[R] <component>[ <component>\&...] <release>[ <release>\&...]
Upgrades specified components to the specified releases.
To specify multiple components by name, list them with a space or use
wildcards.
.RS
.PP
For connectivity components, either platform, connectivity, or both
releases can be specified.
Upgrade fails if incompatible combination of platform and connectivity
release is specified.
.PP
For Speedcore, you can specify only the platform for each hosted
component; connectivity release will be automatically upgraded using the
latest compatible connectivity package from the Distribution Center.
.RE
.TP
\f[B]\f[CB]tbcomponent upgrade\f[B]\f[R] <component_type> <system> <release>[ <release>\&...]
Same as previous but allows to upgrades all components of the specified
component type from the specified releases.
.TP
\f[B]\f[CB]tbcomponent history\f[B]\f[R] [\f[B]\f[CB]-k date\f[B]\f[R] <date_from>] [<component>[ <component>\&...]]
Displays the history of all \f[C]tbcomponent\f[R] commands successfully
issued that affect persisted state.
The history output provides information about the following: from which
node, what user, and what command and when was issued.
.RS
.PP
The \f[C]-k date\f[R] <date_from> switch shows commands that have been
executed since specified date.
.PP
If component list is specified, history related to the selected
components will be shown.
.RE
.PP
\f[B]Environment variables\f[R]
.TP
\f[B]\f[CB]TBRICKS_SYSTEM\f[B]\f[R]
Which Tbricks system to operate on if the system is not specified in the
command line.
.SH OPTIONS
.TP
\f[B]\f[CB]--parsable\f[B]\f[R]
When used in conjunction with subcommands, the output is displayed in a
machine-parsable format.
.SH EXAMPLES
.PP
\f[B]Creating a component on a specific node\f[R]
.IP
.nf
\f[C]
   $ tbcomponent create Strategy Engine tbricks-2.14.0.10 com1 node1
   Creating component \[dq]com1\[dq] (type=\[dq]Strategy Engine\[dq], node=\[dq]node1\[dq], system=\[dq]tbricks_system\[dq]): OK
   $
\f[R]
.fi
.PP
\f[B]Destroying a component\f[R]
.IP
.nf
\f[C]
   $ tbcomponent destroy com2
   Destroying component \[dq]com2\[dq]: OK
   $
\f[R]
.fi
.PP
\f[B]Listing all configured components\f[R]
.IP
.nf
\f[C]
   $ tbcomponent list
             Short       Status        Node        System              Type               PID               Release
   --------------------------------------------------------------------------------------------------------------------------------
             com1       Starting       node1       system1        Strategy Engine         1234          tbricks-2.14.0.10
             com3       Stopping       node3       system1       Order Persistence        1236          tbricks-2.14.0.10
             com2       Runnuing       node2       system2        Strategy Engine         1235          tbricks-2.13.2.24
             com4       Stopped        node4       system2       Trade Persistence         -            tbricks-2.13.2.24
   --------------------------------------------------------------------------------------------------------------------------------
   $
\f[R]
.fi
.PP
\f[B]Listing all configured components matching a pattern\f[R]
.IP
.nf
\f[C]
   $ tbcomponent list \[aq]\[rs]1\[aq]
          Short          Status        Node        System              Type               PID               Release
   --------------------------------------------------------------------------------------------------------------------------------
          com1          Starting       node1       system1        Strategy Engine          1234          tbricks-2.14.0.10
   --------------------------------------------------------------------------------------------------------------------------------
   $
\f[R]
.fi
.PP
\f[B]Listing components configured for particular system\f[R]
.IP
.nf
\f[C]
   $ tbcomponent list system1
             Short       Status        Node        System              Type               PID               Release
   --------------------------------------------------------------------------------------------------------------------------------
             com1       Starting       node1       system1        Strategy Engine          1234          tbricks-2.14.0.10
             com3       Stopping       node3       system1       Order Persistence         1236          tbricks-2.14.0.10
   --------------------------------------------------------------------------------------------------------------------------------
   $
\f[R]
.fi
.PP
\f[B]Setting a component property\f[R]
.IP
.nf
\f[C]
   $ tbcomponent set start_days=Monday com1
   Components to set: com1...
   com1: OK
   $
\f[R]
.fi
.PP
\f[B]Getting a component property\f[R]
.IP
.nf
\f[C]
   $ tbcomponent get start_days com1
   short_name : com1
   start_days : Monday
   $
\f[R]
.fi
.PP
\f[B]Getting all component properties\f[R]
.IP
.nf
\f[C]
   $ tbcomponent get com1
   short_name : com1
   identifier : 29c76295-1dd2-11b2-98c8-00144f2a1684
   node : node1
   type : Strategy Engine
   name : Strategy Engine
   start_days : Monday
   start_time : 08:00
   stop_days : Sunday
   stop_time : 18:00
   timezone : Europe/Stockholm
   $
\f[R]
.fi
.PP
\f[B]Starting a component\f[R]
.IP
.nf
\f[C]
   $ tbcomponent start \[aq]c1\[aq]
   Starting components: com1 ...
   com1: OK
   $
\f[R]
.fi
.PP
\f[B]Stopping a component\f[R]
.IP
.nf
\f[C]
   $ tbcomponent stop com1
   Stopping components: com1 ...
   com1: OK
   $
\f[R]
.fi
.PP
\f[B]Resetting FIX sequence numbers using setonce\f[R]
.IP
.nf
\f[C]
   $ tbcomponent setonce fix_incoming_sequence_number=4002 trf
   Components to setonce: trf...
   trf: OK
   $ tbcomponent setonce fix_outgoing_sequence_number=2001 trf
   Components to setonce: trf...
   trf: OK
   $
\f[R]
.fi
.PP
\f[B]Relocating a component\f[R]
.IP
.nf
\f[C]
   $ tbcomponent relocate xp node3
   Component \[dq]xp\[dq] and its persistence will be relocated to node \[dq]node3\[dq]. This may be a lengthy operation. Please do not restart Admin Center and Admin Agents on source and destination nodes during the relocation.

   Do you want to proceed? [Y/N]: y
   Installing packages tbricks-2.14.0.192 on node \[aq]node3\[aq] : 100%
   Relocating persistence from node \[aq]node1\[aq] to node \[aq]node3\[aq] : 100%
   Component \[dq]xp\[dq] relocated to node \[dq]node3\[dq].
   $
\f[R]
.fi
.SH EXIT STATUS
.PP
The following exit values are returned:
.IP \[bu] 2
0: Successful completion.
.IP \[bu] 2
1: An error occurred.
.IP \[bu] 2
2: Invalid command line options were specified.
.SH SEE ALSO
.PP
\f[C]tbintro\f[R](1), \f[C]tbaudit\f[R](1), \f[C]tbcomponent\f[R](1),
\f[C]tbcore\f[R](1), \f[C]tblog\f[R](1), \f[C]tbnode\f[R](1),
\f[C]tbrelease\f[R](1), \f[C]tbresource\f[R](1), \f[C]tbservice\f[R](1),
\f[C]tbsubsystem\f[R](1), \f[C]tbsystem\f[R](1), \f[C]tbuser\f[R](1)
