.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "tbrole" "1" "2020-06-02" "Tbricks" "tbrole man page"
.hy
.SH NAME
.PP
\f[C]tbrole\f[R] \[en] manages available roles and sets their
properties.
.SH SYNOPSIS
.PP
\f[C]tbrole\f[R] [\f[C]help\f[R]]
.PP
\f[C]tbrole create\f[R] <role> [<identifier>] [<parent_role>] [<system>]
.PP
\f[C]tbrole destroy role\f[R] [<system>]
.PP
\f[C]tbrole list\f[R] [\f[C]-d\f[R]] [<system>]
.PP
\f[C]tbrole set\f[R] [<property>=<value> <role> [<system>]]
.PP
\f[C]tbrole clear\f[R] [<property>[,<property>\&...] <role>] [<system>]
.PP
\f[C]tbrole get\f[R] [<property>[,<property>\&...]] [<role>] [<system>]
.PP
\f[C]tbrole history\f[R]
.SH DESCRIPTION
.PP
The \f[C]tbrole\f[R] command lists the available roles that users can
have in the Tbricks system and sets their properties.
.PP
Each user can belong to one role only as of Tbricks Genesis 09/12, this
is a limitation that is expected to be lifted in future releases which
incorporates RBAC.
Using hierarchical roles are not relevant in this release.
.PP
Roles are used for setting limits for a group of users as well as for
routing for certain marketplaces when multiple trading services are
required (e.g.\ Eurex).
Roles are also used for specifying read-only access or operational
access to setting risk limits.
This approach will be superseded by RBAC in a future release.
.SS Identifiers
.PP
Please see \f[C]tbintro\f[R](1) for information about the identifiers
used.
.SS Properties
.PP
Every role has a set of properties that can be set, including limited
access to certain parts of the Frontend application.
.PP
\f[B]The following properties specify display attributes for the
role:\f[R]
.TP
\f[B]\f[CB]description\f[B]\f[R]
The description to use when display the role in e.g.\ the user
interface.
.SH SUBCOMMANDS
.PP
All subcommands that modify state are logged persistently to the history
log in their original form.
.PP
The \f[C]tbrole\f[R] command provides subcommands to list available
roles, set and get role properties, and provide information about
historically issued commands.
.PP
\f[B]The following subcommands are supported:\f[R]
.TP
\f[B]\f[CB]tbrole\f[B]\f[R] [\f[B]\f[CB]help\f[B]\f[R]]
Displays usage of the tool, including available subcommands and options.
.TP
\f[B]\f[CB]tbrole create\f[B]\f[R] <role> [<identifier>] [<parent_role>] [<system>]
Creates a new role with the specified short name.
.RS
.PP
If the optional <parent_role> is specified, the tool verifies that it is
a existing role that is referenced before assigning the new role as a
child of that parent role.
If the <parent_role> is not specified, the role will be a top-level role
in the role hierarchy.
.PP
If the optional <identifier> is specified, the tool verifies that it is
specified as unique and not currently in use by another existing role.
If it is not specified, an guaranteed unique identifier will
automatically be generated for the role.
.RE
.TP
\f[B]\f[CB]tbrole destroy role\f[B]\f[R] [<system>]
Sets the deleted property to 1 for the role, effectively deleting if
from the admin infrastructure.
.TP
\f[B]\f[CB]tbrole list\f[B]\f[R] [\f[B]\f[CB]-d\f[B]\f[R]] [<system>]
Lists all roles configured in the system.
.RS
.PP
\f[C]-d\f[R] show deleted roles.
.RE
.TP
\f[B]\f[CB]tbrole set\f[B]\f[R] [<property>=<value> <role> [<system>]]
If the <property> is not specified, subcommand will list all possible
properties that can be set.
Otherwise, it sets the property to the given value for the <role>.
.RS
.PP
Only some properties can be edited.
See the \f[B]Properties\f[R] section for more information on what
properties can be set and acceptable values.
.RE
.TP
\f[B]\f[CB]tbrole clear\f[B]\f[R] [<property>[,<property>\&...] <role>] [<system>]
Clears values for the properties for the specified role.
.RS
.PP
If the <property> is not specified, subcommand will list all possible
properties that can be cleared.
.RE
.TP
\f[B]\f[CB]tbrole get\f[B]\f[R] [<property>[,<property>\&...]] [<role>] [<system>]
Display configuration information for the specified role or possible
properties if the role is not specified.
.TP
\f[B]\f[CB]tbrole history\f[B]\f[R]
Display the history of all \f[C]tbrole\f[R] commands successfully issued
that affect persisted state.
The history output provides information on from which node, what user,
and what command was issued at what point in time.
.SH OPTIONS
.TP
\f[B]\f[CB]--parsable\f[B]\f[R]
When used in conjunction with subcommands, the output is displayed in a
machine-parsable format.
.SH EXAMPLES
.PP
\f[B]Creating a new top-level role\f[R]
.IP
.nf
\f[C]
   $ tbrole create trader
   The role \[aq]trader\[aq] was created.
   $


   Listing all available roles

   $ tbrole list
             Role                   Parent                  Description
   ----------------------------------------------------------------------------
             trader
             operations
             development
             backoffice
   ----------------------------------------------------------------------------
   $
\f[R]
.fi
.PP
\f[B]Setting role properties\f[R]
.IP
.nf
\f[C]
   $ tbrole set description=\[dq]A developer configuring system metadata (columns, plug-ins, ...).\[dq] development
   $
\f[R]
.fi
.SH EXIT STATUS
.PP
The following exit values are returned:
.IP \[bu] 2
0: Successful completion.
.IP \[bu] 2
1: An error occurred.
.IP \[bu] 2
2: Invalid command line options were specified.
.SH SEE ALSO
.PP
\f[C]tbintro\f[R](1), \f[C]tbaudit\f[R](1), \f[C]tbcomponent\f[R](1),
\f[C]tbcore\f[R](1), \f[C]tblog\f[R](1), \f[C]tbnode\f[R](1),
\f[C]tbrelease\f[R](1), \f[C]tbresource\f[R](1), \f[C]tbservice\f[R](1),
\f[C]tbsubsystem\f[R](1), \f[C]tbsystem\f[R](1), \f[C]tbuser\f[R](1)
