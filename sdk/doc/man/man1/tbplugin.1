.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "tbplugin" "1" "2020-06-02" "Tbricks" "tbplugin man page"
.hy
.SH NAME
.PP
\f[C]tbplugin\f[R] \[en] uploads/imports plug-ins and their definitions.
.SH SYNOPSIS
.PP
\f[C]tbplugin\f[R] [\f[C]help\f[R]]
.PP
\f[C]tbplugin list\f[R]|\f[C]ls\f[R] [<system>]
.PP
\f[C]tbplugin get\f[R] <plug-in> [<system>]
.PP
\f[C]tbplugin reload\f[R] [\f[C]-w\f[R] <time-out>] <filename> <system>
[<version>]
.PP
\f[C]tbplugin import\f[R] [\f[C]-vfs\f[R]] <filename> <system> [<user>]
.PP
\f[C]tbplugin export\f[R] [\f[C]-hsnpFftmJM\f[R]] [<path>] <system>
.PP
\f[C]tbplugin sdk_upgrade\f[R]|\f[C]su\f[R] [\f[C]-v\f[R]] <filename>
<system> [<user>]
.PP
\f[C]tbplugin destroy\f[R] <plug-in> [<system>] [<platform>]
.PP
\f[C]tbplugin destroy -a\f[R] <system> [<platform>]
.PP
\f[C]tbplugin history\f[R]
.SH DESCRIPTION
.PP
The \f[C]tbplugin\f[R] tool is used to import plug-ins, such as
strategies, pricing, limits, visualization and market data plug-ins into
Tbricks.
It uploads the plug-ins to the Distribution Center which subsequently
automatically distributes it to all nodes in the system through the
Administration Agents running locally on each node.
.PP
A plug-in consists of two parts, one shared library and one manifest
file which describes the plug-in.
The process of creating the shared library and the manifest file is
outlined in Confluence system.
.PP
The tool creates default properties, columns and strategy panel layouts
for strategy plug-ins during import.
These can then subsequently be modified by the user from the x-ray
frontend.
.PP
Unlike the other administrative tools, the \f[C]tbplugin\f[R] tool is
distributed as part of the product releases rather that as part of the
administration tools, as it is dependent on release version-specific
functionality such as the Metadata and App API versions as it interacts
with services in the system during import.
.SS Identifiers
.PP
Please see \f[C]tbintro\f[R](1) for information about the identifiers
used.
.SH SUBCOMMANDS
.PP
The \f[C]tbplugin\f[R] tool provides various subcommands for importing
plug-in definitions, verifying App API compliance and uploading
strategies, as well as other administrative tasks such as destroying a
specific plug-in and removing it from the system.
.PP
\f[B]The following subcommands are supported:\f[R]
.TP
\f[B]\f[CB]tbplugin\f[B]\f[R] [\f[B]\f[CB]help\f[B]\f[R]]
Displays usage of the tool, including available subcommands and options.
.TP
\f[B]\f[CB]tbplugin list\f[B]\f[R]|\f[B]\f[CB]ls\f[B]\f[R] [<system>]
Provides a list of all currently available plug-ins as well as
information on which systems they are used by.
If the system is specified, only plug-ins used by this system are
listed.
.TP
\f[B]\f[CB]tbplugin get\f[B]\f[R] <plug-in> [<system>]
Displays the properties for the specified plug-in.
If the system is specified, only plug-in used by this system is listed.
Name or id can be used to identify both the plug-in and the system.
.TP
\f[B]\f[CB]tbplugin reload\f[B]\f[R] [\f[B]\f[CB]-w\f[B]\f[R] <time-out>] <filename> <system> [<version>]
Uploads a plug-in binary to the Distribution Center, making it available
immediately to all Engines that makes use of this specific plug-in type.
.RS
.PP
To reload C++ apps, use \f[C]tbplugin\f[R] from SDK package.
Otherwise it will throw the \f[B]Cannot open shared object file\f[R]
error.
.TP
\f[B]\f[CB]-w\f[B]\f[R]
Set timeout (in seconds) waiting for Admin Agent to download the
plug-in.
Default value is 60 sec.
.RE
.TP
\f[B]\f[CB]tbplugin import\f[B]\f[R] [\f[B]\f[CB]-vfs\f[B]\f[R]] <filename> <system> [<user>]
Import a plug-in definition, creating relevant properties, columns and
strategy panel layouts.
.RS
.PP
The tool validates that the specified filename corresponds to a known
plug-in file format, and that a manifest is available in the same
directory as the plug-in.
The tool will then perform the required steps to extract the relevant
information, including but not limited to extracting and reading the
manifest etc.
.PP
If the systems Metadata service is unavailable, the import will fail.
.TP
\f[B]\f[CB]-v\f[B]\f[R]
Print verbose information about the import process.
.TP
\f[B]\f[CB]-f\f[B]\f[R]
Replace all conflicting metadata entries with the new ones from the
plug-in package.
.TP
\f[B]\f[CB]-s\f[B]\f[R]
Skip the conflicting entries and keep the current ones.
.RE
.TP
\f[B]\f[CB]tbplugin export\f[B]\f[R] [\f[B]\f[CB]-hsnpFftmJM\f[B]\f[R]] [<path>] <system>
Exports definitions that are needed by a plug-in for accessing
properties and other entities through the App API.
.RS
.PP
By default, the tool will output its definitions in the current working
directory unless path is specified.
.PP
The source file contains convenience declarations for accessing
Instrument Parameters, Parameter Sets, Extra Data keys and Venues.
.PP
If the Metadata service is unavailable, the export will fail.
.TP
\f[B]\f[CB]-h\f[B]\f[R]
Specify a different extension for the header file, defaults to
\f[C].h\f[R] if this option is not specified.
.TP
\f[B]\f[CB]-s\f[B]\f[R]
Specify a provider property.
Can be one of [\f[C]all\f[R] | \f[C]user\f[R] | \f[C]plugin\f[R] |
\f[C]sdk\f[R] | \f[C]system\f[R]].
User provider is used by default.
.TP
\f[B]\f[CB]-n\f[B]\f[R]
Specify a namespace.
Default is \f[C]tbricks\f[R].
If provider property is set to \f[C]all\f[R] or \f[C]system\f[R], and to
system name otherwise.
.TP
\f[B]\f[CB]-p\f[B]\f[R] <plugin>
Specify a plugin name to generate definitions for.
.TP
\f[B]\f[CB]-m\f[B]\f[R]
Generate a manifest file for the plugin specified by the \f[C]-p\f[R]
option.
.TP
\f[B]\f[CB]-F\f[B]\f[R]
Generate a FIXatdl file for strategy plugins.
.TP
\f[B]\f[CB]-J\f[B]\f[R]
Generate definitions in Java instead of C++.
.TP
\f[B]\f[CB]-f\f[B]\f[R]
Specify a different base name for the source files.
Default is \f[C]Definitions\f[R].
.TP
\f[B]\f[CB]-t\f[B]\f[R]
Generate unit testing helper.
.TP
\f[B]\f[CB]-M\f[B]\f[R] <app_folder>
Generate a makefile for the plugin using the specified folder.
.RE
.TP
\f[B]\f[CB]tbplugin sdk_upgrade\f[B]\f[R]|\f[B]\f[CB]su\f[B]\f[R] [\f[B]\f[CB]-v\f[B]\f[R]] <filename> <system> [<user>]
Upgrades system shared SDK metadata.
Should be done as part of SDK upgrade.
.RS
.PP
If the Metadata service is unavailable, the upgrade will fail.
.TP
\f[B]\f[CB]-v\f[B]\f[R]
Specify a verbose mode.
.RE
.TP
\f[B]\f[CB]tbplugin destroy\f[B]\f[R] <plug-in> [<system>] [<platform>]
Removes a plug-in from the Distribution Center, making it unavailable to
all Engines that uses this specific plug-in type.
Destroying a plug-in where there are active instances (like strategies),
this will cause such instances to be deleted.
If the system is not specified, all plug-ins with the specified name
will be removed.
.RS
.PP
Name or id can be used to identify the plug-in.
You can also destroy the plugin only for specified platform.
Platform should be specified as in the \f[B]Platform\f[R] column of
\f[C]tbplugin ls\f[R] output
(\[lq]Linux\[rq]/\[lq]Darwin\[rq]/\[lq]Solaris\[rq]).
.RE
.TP
\f[B]\f[CB]tbplugin destroy -a\f[B]\f[R] <system> [<platform>]
Same as above, but destroys all plug-ins in the specified system.
.TP
\f[B]\f[CB]tbplugin history\f[B]\f[R]
Displays the history of all \f[C]tbplugin\f[R] commands successfully
issued that affect persisted state.
The history output provides information on from which node, what user,
and what command was issued at what point in time.
.SH OPTIONS
.TP
\f[B]\f[CB]--parsable\f[B]\f[R]
When used in conjunction with subcommands, the output is displayed in a
machine-parsable format.
.SH EXAMPLES
.PP
\f[B]Creating a new plug-in\f[R]
.IP
.nf
\f[C]
$ tbplugin reload mystrategy.so
$
\f[R]
.fi
.PP
\f[B]Importing a plug-in definition\f[R]
.IP
.nf
\f[C]
$ tbplugin import mystrategy.plugin production
Import completed.
$

$ tbplugin import mystrategy.pkg <system> [user]
Import completed.
$
\f[R]
.fi
.PP
\f[B]Destroying plugin\f[R]
.IP
.nf
\f[C]
$ tbplugin destroy \[dq]Order\[dq] tb_sys Linux
Destroying plugin \[aq]Order\[aq] in system \[aq]tb_sys\[aq] for platform \[aq]Linux\[aq]...
OK
$
\f[R]
.fi
.SH EXIT STATUS
.PP
The following exit values are returned:
.IP \[bu] 2
0: Successful completion.
.IP \[bu] 2
1: An error occurred.
.IP \[bu] 2
2: Invalid command line options were specified.
.SH SEE ALSO
.PP
\f[C]tbintro\f[R](1), \f[C]tbaudit\f[R](1), \f[C]tbcomponent\f[R](1),
\f[C]tbcore\f[R](1), \f[C]tblog\f[R](1), \f[C]tbnode\f[R](1),
\f[C]tbrelease\f[R](1), \f[C]tbresource\f[R](1), \f[C]tbservice\f[R](1),
\f[C]tbsubsystem\f[R](1), \f[C]tbsystem\f[R](1), \f[C]tbuser\f[R](1)
