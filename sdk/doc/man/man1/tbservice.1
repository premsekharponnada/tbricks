.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "tbservice" "1" "2020-06-02" "Tbricks" "tbservice man page"
.hy
.SH NAME
.PP
\f[C]tbservice\f[R] \[en] configures and controls logical services.
.SH SYNOPSIS
.PP
\f[C]tbservice\f[R] [\f[C]help\f[R]]
.PP
\f[C]tbservice list\f[R]|\f[C]ls\f[R]
[<service>|<component>|<system>|<subsystem>]
.PP
\f[C]tbservice info\f[R] <service>
.PP
\f[C]tbservice set\f[R] [[\f[C]-f\f[R]] <property>=<value> <service>[
<service>\&...]]
.PP
\f[C]tbservice setonce\f[R] [[\f[C]-f\f[R]] <property>=<value>
<service>[ <service>\&...]]
.PP
\f[C]tbservice clear\f[R] [<property>[,<property>\&...] <service>[
<service>\&...]]
.PP
\f[C]tbservice get\f[R] [[\f[C]-a\f[R]] [\f[C]-R\f[R]] <service>[
<service>\&...]]
.PP
\f[C]tbservice get\f[R] [<property>[,<property>\&...] [<service>[
<service>\&...]]]
.PP
\f[C]tbservice start\f[R] <service>|<system>
.PP
\f[C]tbservice stop\f[R] <service>|<system>
.PP
\f[C]tbservice history\f[R] [\f[C]-k date\f[R] <from>] [<service>[
<service>\&...]]
.SH DESCRIPTION
.PP
The \f[C]tbservice\f[R] command configures logical Tbricks services.
A service provides a certain set of functionality to the system and is
implemented as part of a component (which can provide multiple services
to the system).
.PP
The \f[C]tbservice\f[R] tool can be used to start/stop services by
starting/stopping corresponding components or systems.
.PP
The \f[C]tbservice\f[R] tool also provides facilities for
getting/setting service properties, such as service instance identifier,
display names, etc.
.SS Identifiers
.PP
Please see \f[C]tbintro\f[R](1) for information about the identifiers
used.
.SS Properties
.PP
Each service has a set of properties that are used to provide specific
behavior.
.PP
The identifier provides a persistent unique identifier (an UUID), that
is assigned at creation time.
It is typically used for cross references and/or scripts which require
that the identifier will not change.
The identifier cannot be changed by the user.
.TP
\f[B]\f[CB]identifier\f[B]\f[R]
The UUID uniquely identifying the service.
.PP
\f[B]The following properties can be set by a user:\f[R]
.TP
\f[B]\f[CB]short_name\f[B]\f[R]
A short name that is used to identify the service.
.TP
\f[B]\f[CB]system\f[B]\f[R]
The system that the service is part of.
This is set at service creation time and can not be changed.
.TP
\f[B]\f[CB]subsystem\f[B]\f[R]
The subsystem that the service is part of.
This is used by the SE and OP services to decide on how to construct
system topology.
.TP
\f[B]\f[CB]component\f[B]\f[R]
The component that the service is part of.
This is set at service creation time and can not be changed.
.TP
\f[B]\f[CB]disabled\f[B]\f[R]
Whether this service should be disabled and not started as part of the
component.
The status in \f[C]tbservice list\f[R] will be shown as
\f[C]Disabled\f[R].
.RS
.PP
The following property defines the type of service.
This property and the remaining properties below can be set.
.RE
.TP
\f[B]\f[CB]type\f[B]\f[R]
The type of service to provide.
This is set at service creation time and cannot be changed.
.PP
\f[B]The following properties specify display attributes for the
service:\f[R]
.TP
\f[B]\f[CB]name\f[B]\f[R]
The display name of the service, used for listing the services.
The default name is generated automatically by the service.
.TP
\f[B]\f[CB]description\f[B]\f[R]
A longer description of the service and its intended usage.By default,
the description is not set.
.SS Service specific properties:
.PP
Some services have additional service-specific properties.
Some of these properties are outlined here.
The full list you can view using \f[C]tbservice set\f[R]:
.TP
\f[B]\f[CB]end_of_day_time\f[B]\f[R]
The time during the day that should be used as the internal \[lq]end of
day\[rq] signal.
This is used e.g.\ to clean up strategies that should be deleted at end
of day.
The end of day time should be set in the format HH:MM.
By default, end of day is set to be 00:00.
.TP
\f[B]\f[CB]audit\f[B]\f[R]
Set to `true' to enable audit support for the service.
.PP
\f[B]Market data service\f[R]
.TP
\f[B]\f[CB]venue_identifier\f[B]\f[R]
The venue identifier for a service.
By default, the venue identifier is not set.
.TP
\f[B]\f[CB]venue_time_zone\f[B]\f[R]
The timezone that venue timestamps are expressed in, this is the Olson
TZ long name (http://en.wikipedia.org/wiki/Zoneinfo),
e.g.\ Europe/London or America/Chicago.
For an exhaustive list of the timezone names supported, see:
http://en.wikipedia.org/wiki/List_of_zoneinfo_timezones (or access the
original database at ftp://elsie.nci.nih.gov/pub/)
.PP
\f[B]Trading service\f[R]
.TP
\f[B]\f[CB]venue_identifier\f[B]\f[R]
The venue identifier for a trading service.
By default, the venue identifier is not set.
.TP
\f[B]\f[CB]venue_time_zone\f[B]\f[R]
The timezone that venue timestamps are expressed in, this is the Olson
TZ long name (http://en.wikipedia.org/wiki/Zoneinfo),
e.g.\ Europe/London or America/Chicago.
For an exhaustive list of the timezone names supported, see:
http://en.wikipedia.org/wiki/List_of_zoneinfo_timezones (or access the
original database at ftp://elsie.nci.nih.gov/pub/)
.PP
\f[B]Strategy Engine service\f[R]
.TP
\f[B]\f[CB]use_delete_add\f[B]\f[R]
A comma-separated list of venue identifiers where order modifications
are not supported by the market.
If a venue is on this list, Strategy Engine will modify an order in two
steps \[en] first, the old order will be deleted, and second, a new one
will be sent to the market.
By default, the property value is not set.
.TP
\f[B]\f[CB]strategy_log_level_persisted\f[B]\f[R]
This is the level of which strategy logs are persisted.
The available levels are: \f[C]critical\f[R], \f[C]error\f[R],
\f[C]warning\f[R], \f[C]notice\f[R], \f[C]status\f[R], \f[C]debug\f[R]
and \f[C]dump\f[R].
The log level to persist is not set by default, which means notice logs
and more important will be stored.
.SH SUBCOMMANDS
.PP
All subcommands that modify state are logged persistently to the history
log in their original form.
.PP
The \f[C]tbservice\f[R] command provides subcommands for managing
services and their configuration.
.PP
\f[B]The following subcommands are supported:\f[R]
.TP
\f[B]\f[CB]tbservice\f[B]\f[R] [\f[B]\f[CB]help\f[B]\f[R]]
Displays usage of the tool, including available subcommands and options.
.TP
\f[B]\f[CB]tbservice list\f[B]\f[R]|\f[B]\f[CB]ls\f[B]\f[R] [<service>|<component>|<system>|<subsystem>]
Lists services.
.RS
.PP
If optional parameter is a wildcard, command displays detailed
information about the service which name matches the wildcard.
.PP
If optional parameter is a service name, command displays detailed
information about the specified service.
.PP
If optional parameter is a component, a system, or a subsystem name,
command displays services provided by this component, system, or
subsystem.
.RE
.TP
\f[B]\f[CB]tbservice info\f[B]\f[R] <service>
Prints additional information about service, e.g.\ resource
associations.
.TP
\f[B]\f[CB]tbservice set\f[B]\f[R] [[\f[B]\f[CB]-f\f[B]\f[R]] <property>=<value> <service>[ <service>\&...]]
If the property is not specified, this lists all possible properties
that can be set.
Otherwise it sets the property to the given value for the services.
.RS
.PP
\f[C]-f\f[R] option allows:
.IP "1." 3
To set arbitrary property that is not included in predefined list of
possible service properties.
.IP "2." 3
Force to set property value if it is rejected by consistency checks.
.RE
.PP
Only some properties can be edited.
See the \f[C]Properties\f[R] section for more information on what
properties can be set and acceptable values.
.TP
\f[B]\f[CB]tbservice setonce\f[B]\f[R] [[\f[B]\f[CB]-f\f[B]\f[R]] <property>=<value> <service>[ <service>\&...]]
If the property is not specified, this does the same as
\f[C]tbservice\f[R] set.
Otherwise it sets the property to the given value for the services and
clear it after the next restart of the component that the service is
part of.
This is useful for configuration properties that one wants to set
temporarily.
.RS
.PP
\f[C]-f\f[R] option forces property to be set even if that is not
included in predefined list of service properties or the value is
rejected by consistency checks.
.RE
.TP
\f[B]\f[CB]tbservice clear\f[B]\f[R] [<property>[,<property>\&...] <service>[ <service>\&...]]
Clears values for the given properties for the specified services.
.RS
.PP
If the property is not specified, this will list all possible properties
that can be cleared.
.RE
.TP
\f[B]\f[CB]tbservice get\f[B]\f[R] [[\f[B]\f[CB]-a\f[B]\f[R]] [\f[B]\f[CB]-R\f[B]\f[R]] <service>[ <service>\&...]]
Displays status and configuration information for specified services.
If no services are specified, all available properties will be listed.
.RS
.PP
\f[C]-a\f[R] option forces all properties to be displayed including the
ones that have no value.
.PP
\f[C]-R\f[R] option is used to get information for specified service,
related component, subsystem, system, and node.
.RE
.TP
\f[B]\f[CB]tbservice get\f[B]\f[R] [<property>[,<property>\&...] [<service>[ <service>\&...]]]
Displays status and configuration information for specified services.
If neither services nor properties are specified, all available
properties will be listed.
If properties are specified without services, property values will be
displayed for all services.
.TP
\f[B]\f[CB]tbservice start\f[B]\f[R] <service>|<system>
Starts the components corresponding to specified services or all
components in the specified system.
.TP
\f[B]\f[CB]tbservice stop\f[B]\f[R] <service>|<system>
Stops the components corresponding to specified services or all
components in the specified system.
.TP
\f[B]\f[CB]tbservice history\f[B]\f[R] [\f[B]\f[CB]-k date\f[B]\f[R] <from>] [<service>[ <service>\&...]]
Displays the history of all \f[C]tbservice\f[R] commands successfully
issued that affect persisted state.
The history output provides information on from which node, what user,
and what command was issued at what point in time.
.RS
.TP
\f[B]\f[CB]-k date\f[B]\f[R]
Show commands that have been executed since specified date.
.PP
If service list is specified, history related to selected services will
be shown.
.RE
.SH OPTIONS
.TP
\f[B]\f[CB]--parsable\f[B]\f[R]
When used in conjunction with subcommands, the output is displayed in a
machine-parsable format.
.SH EXAMPLES
.PP
\f[B]Listing all configured services\f[R]
.IP
.nf
\f[C]
   $ tbservice list
   Short Status Node (port) System Subsystem Service
   --------------------------------------------------------------------------------
   ser1 Running node1 (10.0.1.1:3412) Production Default Trade Persistence
   ser2 Running node1 (10.0.1.1:1232) Production Default Order Persistence
   ser4 Running node2 (10.0.1.2:8734) Production Default Strategy Engine
   ser3 Running node3 (10.0.1.3:1238) Production Default Strategy Engine (2)
   ser6 Running node4 (10.0.1.4:1231) Production Default Strategy Engine (3)
   ser9 Running node5 (10.0.1.5:7843) Production Default Strategy Engine (4)
   ser5 Running node1 (10.0.1.1:7831) Production Default XRay Engine
   ser8 Running node1 (10.0.1.1:7834) Production Default Metadata
   ser13 Stopped node1 (10.0.1.1:7844) Production Default Trade Persistence
   ser10 Stopped node1 (10.0.1.1:8743) Production Default XRay Engine
   $
\f[R]
.fi
.PP
\f[B]Listing the configured services matching a pattern\f[R]
.IP
.nf
\f[C]
   $ tbservice list \[aq]\[rs]*1\[rs]*\[aq]
   Short Status Node (port) System Subsystem Service
   --------------------------------------------------------------------------------
   ser1 Running node1 (10.0.1.1:3412) Production Default Trade Persistence
   ser13 Stopped node1 (10.0.1.1:7844) Production Default Trade Persistence
   ser10 Stopped node1 (10.0.1.1:8743) Production Default XRay Engine
   $
\f[R]
.fi
.PP
\f[B]Setting a service property\f[R]
.IP
.nf
\f[C]
   $ tbservice set venue_identifier=8d7c70a5-1dd2-11b2-98c7-00144f2a1684 \[aq]\[rs]*8\[aq]
   $
\f[R]
.fi
.PP
\f[B]Getting a system property\f[R]
.IP
.nf
\f[C]
   $ tbservice get venue_identifier ser8
   8d7c70a5-1dd2-11b2-98c7-00144f2a1684
   $
\f[R]
.fi
.PP
\f[B]Getting all service properties\f[R]
.IP
.nf
\f[C]
   $ tbservice get sys1
   name: Strategy Engine
   description: Strategy Engine
   short_name: ser1
   system: production
   subsystem: default
   component: 09561ae3-1dd2-11b2-98c8-00144f2a1684
   identifier: f525560d-1dd1-11b2-bce4-00144f2a1684
   $
\f[R]
.fi
.PP
\f[B]Starting a single service\f[R]
.IP
.nf
\f[C]
   $ tbservice start ser7
   $
\f[R]
.fi
.PP
\f[B]Stopping all services in a given system\f[R]
.IP
.nf
\f[C]
   $ tbservice stop sys1
   $
\f[R]
.fi
.SH EXIT STATUS
.PP
The following exit values are returned:
.IP \[bu] 2
0: Successful completion.
.IP \[bu] 2
1: An error occurred.
.IP \[bu] 2
2: Invalid command line options were specified.
.SH SEE ALSO
.PP
\f[C]tbintro\f[R](1), \f[C]tbaudit\f[R](1), \f[C]tbcomponent\f[R](1),
\f[C]tbcore\f[R](1), \f[C]tblog\f[R](1), \f[C]tbnode\f[R](1),
\f[C]tbrelease\f[R](1), \f[C]tbresource\f[R](1), \f[C]tbservice\f[R](1),
\f[C]tbsubsystem\f[R](1), \f[C]tbsystem\f[R](1), \f[C]tbuser\f[R](1)
