.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "tbstack" "1" "2020-06-02" "Tbricks" "tbstack man page"
.hy
.SH NAME
.PP
\f[C]tbstack\f[R] \[en] gets stack traces from the system.
.SH SYNOPSIS
.PP
\f[C]tbstack\f[R] \f[C]-h\f[R]|\f[C]--help\f[R]
.PP
\f[C]tbstack\f[R] <component_PID>|<component_name>
[<interval_in_seconds> [<number_of_stacks>] ] | [\f[C]-\f[R]]
[\f[C]-v\f[R]]
.PP
\f[C]tbstack\f[R] <PID/thread1,thread2,\&...> [<interval_in_seconds>
[<number_of_stacks>] ] | [\f[C]-\f[R]] [\f[C]-v\f[R]]
.PP
\f[C]tbstack\f[R] <component/thread1,thread2,\&...>
[<interval_in_seconds> [<number_of_stacks>] ] | [\f[C]-\f[R]]
[\f[C]-v\f[R]]
.PP
\f[C]tbstack\f[R] <command>|<core> [\f[C]-v\f[R]]
.SH DESCRIPTION
.PP
\f[C]tbstack\f[R] is an utility that allows to get stack traces on local
node from application specified by the pid, name of component, or core
file.
.SH SUBCOMMANDS
.PP
\f[B]The following subcommands are supported:\f[R]
.TP
\f[B]\f[CB]tbstack\f[B]\f[R] \f[B]\f[CB]-h\f[B]\f[R]|\f[B]\f[CB]--help\f[B]\f[R]
Display usage of the tool, including available subcommands and options.
.TP
\f[B]\f[CB]tbstack\f[B]\f[R] <component_PID>|<component_name> [<interval_in_seconds> [<number_of_stacks>] ] | [\f[B]\f[CB]-\f[B]\f[R]] [\f[B]\f[CB]-v\f[B]\f[R]]
Get the stack traces (5 by default) on local node from the pid or name
of the component and save to \f[C].txt\f[R] file (one stack per second
by default).
.TP
\f[B]\f[CB]tbstack\f[B]\f[R] <PID>/<thread1> [,<thread2>]\&... [<interval_in_seconds> [<number_of_stacks>] ] | [\f[B]\f[CB]-\f[B]\f[R]] [\f[B]\f[CB]-v\f[B]\f[R]]
Get the stack traces (5 by default) on local node from the pid/thread
and save to .txt file (one stack per second by default).
Threads can be specified either by number or system TID.
.TP
\f[B]\f[CB]tbstack\f[B]\f[R] <component>/<thread1> [,<thread2>]\&... [<interval in seconds> [<number of stacks>] ] | [\f[B]\f[CB]-\f[B]\f[R]] [\f[B]\f[CB]-v\f[B]\f[R]]
Get the stack traces (5 by default) on local node from the
component/thread and save to .txt file (one stack per second by
default).
Threads can be specified either by number or system TID.
.TP
\f[B]\f[CB]tbstack\f[B]\f[R] <command>|<core> [\f[B]\f[CB]-v\f[B]\f[R]]
Get the stack trace on local node from the core file.
.SH OPTIONS
.TP
\f[B]\f[CB]-v\f[B]\f[R]
Non-aggregated output.
.TP
\f[B]\f[CB]-\f[B]\f[R]
Print out one stack trace into STDOUT instead of file.
.SH NOTE
.PP
Available only on Linux.
.SH EXAMPLES
.PP
\f[B]Get the stack trace for pid 6789\f[R]
.IP
.nf
\f[C]
   $ tbstack 6789
   Stack saved: 6789.stack.20171219-120153.txt
   Stack saved: 6789.stack.20171219-120154.txt
   Stack saved: 6789.stack.20171219-120155.txt
   Stack saved: 6789.stack.20171219-120156.txt
   Stack saved: 6789.stack.20171219-120157.txt
\f[R]
.fi
.SH EXIT STATUS
.PP
The following exit values are returned:
.IP \[bu] 2
0: Successful completion.
.IP \[bu] 2
Other: An error occurred.
.SH SEE ALSO
.PP
\f[C]tbadmin\f[R](1), \f[C]tbaudit\f[R](1), \f[C]tbcomponent\f[R](1),
\f[C]tbcore\f[R](1), \f[C]tbcpuset\f[R](1), \f[C]tbctf\f[R](1),
\f[C]tbdbdump\f[R](1), \f[C]tbgdb\f[R](1), \f[C]tbintro\f[R](1),
\f[C]tbirdconvert\f[R](1), \f[C]tblicense\f[R](1), \f[C]tblog\f[R](1),
\f[C]tbmemtrace\f[R](1), \f[C]tbnodevalidate\f[R](1),
\f[C]tbnode\f[R](1), \f[C]tbplugin\f[R](1), \f[C]tbrelease\f[R](1),
\f[C]tbresource\f[R](1), \f[C]tbrole\f[R](1), \f[C]tbsample\f[R](1),
\f[C]tbservice\f[R](1), \f[C]tbsubsystem\f[R](1),
\f[C]tbsystemvalidate\f[R](1), \f[C]tbsystem\f[R](1),
\f[C]tbuser\f[R](1), \f[C]tbvalidate\f[R](1),
\f[C]zeroconf_extender\f[R](1)
