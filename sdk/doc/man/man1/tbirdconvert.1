.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "tbirdconvert" "1" "2020-06-02" "Tbricks" "tbirdconvert man page"
.hy
.SH NAME
.PP
\f[C]tbirdconvert\f[R] \[en] converts external formats to standing data
xml format.
.SH SYNOPSIS
.PP
\f[C]tbirdconvert\f[R] [\f[C]--help\f[R]]
.PP
\f[C]tbirdconvert\f[R] [\f[C]-i\f[R] <filename>] \f[C]-f\f[R] <format>
\f[C]-r\f[R] <resource> [\f[C]-r\f[R] <resource>\&...] [\f[C]-n\f[R]
<result name>] [\f[C]-o\f[R] <outfile>]
.PP
\f[C]tbirdconvert export\f[R] <system>
.SH DESCRIPTION
.PP
The \f[C]tbirdconvert\f[R] commandline tool converts externally provided
instrument lists/definitions to the Tbricks standard XML representation.
This standard format is then typically used as in-data to the standing
data xml-service.
.PP
The conversion is based on the expected format and the provided venue
resource(s) that contains structural information and data for the
conversion.
.SH OPTIONS
.TP
\f[B]\f[CB]-i\f[B]\f[R]
Source file(s).
If not provided, stdin is assumed.
.TP
\f[B]\f[CB]-o\f[B]\f[R]
Destination file of the Tbricks standing data- XML standard format.
If not provided, stdout is assumed.
.TP
\f[B]\f[CB]-f\f[B]\f[R]
Expected format of the source file(s).
The following formats are supported:
.RS
.IP \[bu] 2
neonet - NeoNet standard instrument XML
.IP \[bu] 2
chi-x - chi-x instrument list
.IP \[bu] 2
chi-x-emcf - chi-x Fortis cleared instrument list
.IP \[bu] 2
nyse - NYSE TAQ-master instrument list
.RE
.TP
\f[B]\f[CB]-r\f[B]\f[R]
Resources that the output should consider.
The given resources define the resulting definition of produced
instruments.
.RS
.IP \[bu] 2
-r internal corresponds to the built in resource described by
internal_venue.xml
.IP \[bu] 2
-r neonet corresponds to the built in resource described by
MDAS_venue.xml
.IP \[bu] 2
-r activ corresponds to the built in resource described by
Activ_venue.xml
.IP \[bu] 2
-r chi-x corresponds to the built in resource described by
chix_venue.xml
.RE
.TP
\f[B]\f[CB]-n\f[B]\f[R]
The name of the resulting resource.
If not provided, the outfile name is assumed.
.TP
\f[B]\f[CB]export\f[B]\f[R]
Request for exporting full instrument set from given <system>.
Output is always on stout and format is always Tbricks standard
instrument XML format enabling for easy reimport of instruments.
.TP
\f[B]\f[CB]--precedence\f[B]\f[R]
Sets \f[C]precedence=yes\f[R] for the created instruments.
.SH EXAMPLES
.PP
\f[B]Convert all files with the \f[CB].xml\f[B] suffix (assumed to
contain NeoNet definitions) based on the \f[CB]internal\f[B] resource.
Print the result on stdout.\f[R]
.IP
.nf
\f[C]
   $ tbirdconvert -i \[dq]/tmp/neonet/\[rs]*.xml\[dq] -f neonet -r internal -n stdxml
   <?xml version=\[dq]1.0\[dq] encoding=\[dq]UTF-8\[dq]?>
   <resource name=\[dq]stdxml\[dq] type=\[dq]application/x-standing-data+xml\[dq]>
   <instruments>
       <instrument short_name=\[dq]Apple\[dq] long_name=\[dq]Apple Inc.\[dq] mnemonic=\[dq]AAPL\[dq]>
          <xml type=\[dq]fixml\[dq]>
              <FIXML v=\[dq]4.4\[dq] r=\[dq]20030618\[dq] s=\[dq]20031218\[dq]>
                  <Instrmt Sym=\[dq]AAPL\[dq] SecExch=\[dq]XNAS\[dq] />
              </FIXML>
          </xml>
          <identifiers>
              <identifier venue=\[dq]0f9e71de-6942-4615-a8a7-76272ad9d3e3\[dq] mic=\[dq]XNAS\[dq]>
                  <fields>
                      <field name=\[dq]symbol\[dq] value=\[dq]AAPL\[dq]/>
                  </fields>
              </identifier>
          </identifiers>
       </instrument>
   ...
   </instruments>
   $
\f[R]
.fi
.PP
\f[B]Export all instruments from the given system.\f[R]
.IP
.nf
\f[C]
   $ tbirdconvert export test_system
   <?xml version=\[dq]1.0\[dq]?>
   <resource name=\[dq]instruments\[dq] type=\[dq]application/x-instrument-reference-data+xml\[dq]>
     <groups>

       <group id=\[dq]ba622055-b9a8-4ae3-89b1-20bf5a2fbbb1\[dq] name=\[dq]Test\[dq]
              long_name=\[dq]Tbricks test instrument group\[dq] type=\[dq]custom\[dq]>

       </group>
       ...
       <instrument identifier=\[dq]e43111e6-fd66-4d43-8ac4-a38fab7ca439\[dq]
                   component=\[dq]e43111e6-fd66-4d43-8ac4-a38fab7ca439\[dq]
                   short_name=\[dq]Test\[dq]
                   long_name=\[dq]Test Instrument\[dq]
                   mnemonic=\[dq]\[dq]
                   cfi=\[dq]\[dq]
                   price_format=\[dq]decimal 2\[dq]
                   precedence=\[dq]yes\[dq]>

         <groups>
         </groups>

         <identifiers>
           <identifier venue=\[dq]0f9e71de-6942-4615-a8a7-76272ad9d3e3\[dq] mic=\[dq]XXXX\[dq]>
             <fields>
               <field name=\[dq]symbol\[dq] value=\[dq]TEST\[dq]>
               </fields>
             </identifier>
           </identifiers>
         </instrument>
       </instruments>
     </resource>

     $
\f[R]
.fi
.SS EXIT STATUS
.PP
The following exit values are returned:
.IP \[bu] 2
0: Successful completion.
.IP \[bu] 2
1: An error occurred.
.IP \[bu] 2
2: Invalid command line options were specified.
.SS SEE ALSO
.PP
\f[C]tbintro\f[R](1), \f[C]tbresource\f[R](1)
