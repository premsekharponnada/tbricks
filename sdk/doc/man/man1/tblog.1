.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "tblog" "1" "2020-06-02" "Tbricks" "tblog man page"
.hy
.SH NAME
.PP
\f[C]tblog\f[R] \[en] displays service log entries.
.SH SYNOPSIS
.PP
\f[C]tblog help\f[R] [<component>]
.PP
\f[C]tblog\f[R] [\f[C]list\f[R]] [<system>|<component>|<service>]
[\f[C]-w\f[R]] [\f[C]-W\f[R] [<timeout>]] [\f[C]-f\f[R] <format>]
[<expression>] [\f[C]-s\f[R]] [\f[C]-n\f[R]] [\f[C]--file\f[R]
<location>] [\f[C]--tblog_output\f[R] <destination>]
.PP
\f[C]tblog destroy\f[R] <system>|<component>|<service> [<expression>]
.PP
\f[C]tblog resolve\f[R]|\f[C]name\f[R] [<uuid>|<input_file>] [<system>]
[<expression>]
.PP
\f[C]tblog history\f[R] [\f[C]-a\f[R]] [<expression>]
.SH DESCRIPTION
.PP
\f[C]tblog\f[R] is a command line utility for a variety of tasks
relating to the log entries generated by services in the Tbricks system.
.PP
It provides mechanisms for distributing parallel querying and viewing of
log messages, removing log entries, etc.
.PP
\f[C]tblog\f[R] uses the admin tools infrastructure to find connection
information about the components with which it connects and directly
interacts, and to extract log messages that matched the specified
expression.
To specify administration infrastructure, use the
\f[C]TBRICKS_ADMIN_CENTER\f[R] environment variable.
.PP
It is recommended to use expressions for efficient \f[C]tblog\f[R]
execution.
For more information, see the \f[B]Expressions\f[R] section below.
.SS Identifiers
.PP
Please see \f[C]tbintro\f[R](1) for information about the identifiers
used for systems, components, and services.
.SS Environment variables
.PP
Please see \f[B]Environment variables\f[R] section in
\f[C]tbintro\f[R](1).
.SS Expressions
.PP
Expressions specify matching criteria.
They may be used to apply filters for displayed messages.
Expressions are also required when removing log entries using
\f[C]tblog destroy\f[R].
.PP
\f[B]The following switches are allowed in expressions:\f[R]
.IP \[bu] 2
The \f[C]-a\f[R] switch is used to match all messages.
This switch is ignored if specified with any other switches.
.IP \[bu] 2
The \f[C]-k\f[R] switch is used to construct more sophisticated
expressions.
.PP
A simple expression is a list of one or more key/value pairs.
A match is made when a message has the given value for the specified
key.
.PP
For example, to find and view all messages generated for services of the
\f[B]Trading\f[R] type, use the following command:
.IP
.nf
\f[C]
  tblog -k service_type Trading
\f[R]
.fi
.PP
The \f[C]-k\f[R] option may be followed by one, two, or three arguments.
A single argument matches a message that has the specified key,
regardless of value.
If two arguments are specified, they match a message that has exactly
the specified value for a given key.
If three arguments are specified, they must be in the following format:
\f[C]-k\f[R] <key operation> .
.PP
\f[B]\f[CB]tblog\f[B] supports the following comparison operators:\f[R]
.IP \[bu] 2
\f[C]eq\f[R] equal
.IP \[bu] 2
\f[C]ne\f[R] not equal
.IP \[bu] 2
\f[C]gt\f[R] greater than
.IP \[bu] 2
\f[C]ge\f[R] greater than or equal to
.IP \[bu] 2
\f[C]lt\f[R] less than
.IP \[bu] 2
\f[C]le\f[R] less than or equal to
.PP
Additionally, operators \f[C]eq\f[R] and \f[C]ne\f[R] may be preceded by
one or more of the following modifiers:
.IP \[bu] 2
\f[C]C\f[R] case-fold
.IP \[bu] 2
\f[C]S\f[R] substring
.IP \[bu] 2
\f[C]A\f[R] prefix
.IP \[bu] 2
\f[C]Z\f[R] suffix
.PP
A simple expression matches a message if all of the key-value operations
match.
Logically, the result is an AND of all of key-value operations.
.IP \[bu] 2
The \f[C]-o\f[R] switch is used to construct more sophisticated
expressions.
.PP
The \f[C]-o\f[R] option separates simple expressions and provides an OR
operation.
.PP
If two or more simple expressions are given separated by the
\f[C]-o\f[R] option, they match a message that matches any of these
simple expressions.
For example, to find all messages for services of the \f[B]Trading\f[R],
use the command with the \f[B]Error\f[R] severity level and
greater\[em]OR\[em]not being the \f[B]Trading\f[R] type of service with
the \f[B]Notice\f[R] severity level:
.IP
.nf
\f[C]
   tblog -k service_type Trading -k level le error -o -k service_type ne Trading -k level notice
\f[R]
.fi
.PP
To display log entries for specific date, time, or period, use the
following:
.IP \[bu] 2
Absolute format: [hh:mm][:ss][.uuuuuu] [TimeZone].
.PP
For example: \f[C]tblog -k date 2020-02-15\f[R] (from 2020-02-15 00:00
till 2020-02-16 00:00)
.IP \[bu] 2
Relative format: <number><period>, where <period> is one of the
following: \f[C]y\f[R] = year | \f[C]m\f[R] = month | \f[C]w\f[R] = week
| \f[C]d\f[R] = day | \f[C]h\f[R] = hour | \f[C]M\f[R] = minute.
.PP
For example: \f[C]tblog -k date 5d\f[R] (for last five days till now,
where day is 24 hours)
.IP \[bu] 2
For both of described formats, all available comparison operators can be
applied: \f[C]eq\f[R], \f[C]ne\f[R], \f[C]gt\f[R], \f[C]ge\f[R],
\f[C]lt\f[R], \f[C]le\f[R] (see above).
.PP
For example: \f[C]tblog -k date ge 2020-01-01 -k date lt 2020-02-21\f[R]
(from 2020-01-01 00:00 till 2020-02-21 00:00)
.PP
For example: \f[C]tblog -k date lt 2d\f[R] (from the component life till
two days ago)
.PP
Note that unspecified comparison operators are treated differently: For
absolute datetimes, it is considered to be \f[C]eq\f[R]
(\f[C]tblog -k date 2020-02-20\f[R] is the same as
\f[C]tblog -k date eq  2020-02-20\f[R]); for relative date\[hy]times, it
is considered to be \f[C]ge\f[R] (\f[C]tblog -k date 5d\f[R] is the same
as \f[C]tblog -k date ge 5d\f[R]).
.SS Keys
.PP
A service may log messages with arbitrary key/value pairs, but a number
of keys are predefined and always available in all log entries.
These are especially useful when constructing expressions for efficient
log filtering.
.TP
\f[B]\f[CB]level\f[B]\f[R]
Log entry severity level.
.TP
\f[B]\f[CB]date\f[B]\f[R]
Log entry created date.
.TP
\f[B]\f[CB]layer\f[B]\f[R]
Log entry layer.
\f[C]-k layer protocol\f[R] is expanded into
\f[C]-k layer protocol.in -k layer protocol.out\f[R].
.TP
\f[B]\f[CB]node\f[B]\f[R]
Node name.
.TP
\f[B]\f[CB]component\f[B]\f[R]
Component name.
.TP
\f[B]\f[CB]component_type\f[B]\f[R]
Component type.
.TP
\f[B]\f[CB]service\f[B]\f[R]
Service name.
.TP
\f[B]\f[CB]service_type\f[B]\f[R]
Service type.
.TP
\f[B]\f[CB]system\f[B]\f[R]
System name.
.TP
\f[B]\f[CB]message\f[B]\f[R]
Condition of log message text.
.TP
\f[B]\f[CB]fix\f[B]\f[R]
Prescribes tblog to retrieve only FIX messages.
This key can be used only with \f[C]has this key\f[R] condition.
.TP
\f[B]\f[CB]internal\f[B]\f[R]
Prescribes tblog to retrieve only internal logs.
This key can be used only with \f[C]has this key\f[R] condition.
.TP
\f[B]\f[CB]admin\f[B]\f[R]
Prescribes tblog to work only with admin servers.
.TP
\f[B]\f[CB]history\f[B]\f[R]
Prescribes tblog to retrieve only user command line history.
.TP
\f[B]\f[CB]utility\f[B]\f[R]
Filters user command line history by particular utility.
.SS App logs keys
.PP
Apps that are running in the system can also generate log entries into a
separate log repository.
.PP
Log entries generated by apps can be accessed through \f[C]tblog\f[R] by
using special app keys which specify that app log entries should be
displayed before than normal services log entries.
.PP
If such keys are specified, only Strategy Engine instances will provide
any output.
If these keys are combined with any other component, you will not have
any output.
.TP
\f[B]\f[CB]plugin\f[B]\f[R]
Prescribes to retrieve only app logs.
Use it with a value to specify concrete app identifier.
.TP
\f[B]\f[CB]plugin.type\f[B]\f[R]
Plugin type name.
.TP
\f[B]\f[CB]plugin.type_id\f[B]\f[R]
Plugin type identifier.
.TP
\f[B]\f[CB]plugin.owner\f[B]\f[R]
Plugin owner name.
.TP
\f[B]\f[CB]plugin.owner_id\f[B]\f[R]
Plugin owner identifier.
.TP
\f[B]\f[CB]plugin.creator\f[B]\f[R]
Plugin creator name.
.TP
\f[B]\f[CB]plugin.creator_id\f[B]\f[R]
Plugin creator identifier.
.TP
\f[B]\f[CB]plugin.root_id\f[B]\f[R]
Root plugin identifier.
.TP
\f[B]\f[CB]plugin.parent_id\f[B]\f[R]
Parent plugin identifier.
.TP
\f[B]\f[CB]plugin.name\f[B]\f[R]
Plugin name.
.SS Quality of Service
.PP
\f[C]tblog\f[R] can also be used to display Quality of Service (QoS)
counters for system services.
.PP
QoS counters can be accessed by using the special \f[C]-k qos\f[R] key
which specifies that QoS counters should be displayed instead of log
entries.
.PP
QoS counters are printed in a special format: The counter key and its
value separated by comma.
One counter per line.
.SS Administration system logs
.PP
\f[C]tblog\f[R] can be used to manage administration servers logs (Admin
Center, Distribution Center, Admin Agent), e.g.\ to collect or to
destroy.
.PP
To allow \f[C]tblog\f[R] work with admin servers, enable the
\f[C]-k admin\f[R] option.
.PP
If \f[C]-k admin\f[R] is provided, \f[C]tblog\f[R] connects to all
services in the admin system.
Admin system can be set in the \f[C]TBRICKS_ADMIN_CENTER\f[R]
environment variable or with aditional \f[C]-e\f[R] option.
If the admin system does not match the node name or reserved
abbreviations \f[C]ac\f[R] and \f[C]dc\f[R], it also can be provided
instead of Tbricks system, for example:
\f[C]tblog <admin_system_name> -k admin\f[R].
.PP
The simplest way to select a service to connect, is to list service
abbreviations like the component names for regular logs.
Admin Center is abbreviated as \f[C]ac\f[R], Distribution Center as
\f[C]dc\f[R].
For Admin Agent logs, you should specify a node name.
.SS Severity levels
.PP
The most important levels are defined by the lowest values (think most
important == #1 priority), the least important values are defined by the
highest values.
.PP
Thus, the \f[B]critical\f[R] severity level is considered the lowest and
the \f[B]dump\f[R] is considered the highest.
.TP
critical
An unrecoverable critical error has occurred.
The service will try to emit additional debug information for the cause
before aborting.
This is only being done due to a lack for critical system resources or
internal inconsistencies in the service that can risk data corruption or
otherwise potentially serious erroneous behavior.
.TP
error
An unexpected recoverable error condition has occurred.
Such errors should be reported to Tbricks, because in some cases, they
require manual corrective action to be resolved.
.TP
warning
An recoverable but potentially expected exceptional condition has
occurred that may require corrective action by administrative staff to
be resolved.
E.g.
the system may run out of disk space, or a latency measurement counter
is slower than allowed threshold.
.TP
notice
An expected system state change has occurred.
E.g., a service has successfully connected to another service, the
service have connected to an external data source (for trading
services), or the service has fully recovered its state during startup.
.TP
status
Periodic events containing status information.
Typically non-exceptional health information like memory utilization,
cpu utilization, cache statistics, number of instruments, number of
bytes sent/received, number of strategies, number of running strategies,
number of clients connected, etc.
.TP
debug
A moderate amount of debug information is provided with the intention to
aid operational administrative and/or engineering staff with
troubleshooting.
.RS
.PP
Note: Displaying messages of this severity level may have a noticeable
performance impact on the service.
.RE
.TP
dump
This provides extensive debug information, up to and including verbose
dumps of all messages and data buffers sent/received, etc.
This is typically useful only for Tbricks engineering.
.RS
.PP
Note: Displaying messages of this severity level will have a noticeable
performance impact on the service.
.RE
.TP
fulldump
This provides full raw debug dumps, up to and including hex dumps of all
messages and data buffers sent/received, etc.
This is useful only for Tbricks engineering.
.RS
.PP
Note: Displaying messages of this severity level will have a noticeable
performance impact on the service.
.RE
.SH SUBCOMMANDS
.PP
\f[B]The following subcommands are supported:\f[R]
.TP
\f[B]\f[CB]tblog help\f[B]\f[R] [<component>]
Displays usage of the tool, including available subcommands and options
as well as all available default filtering keys.
.PP
If a component is specified, the tool prints all available log layers.
.TP
\f[B]\f[CB]tblog\f[B]\f[R] [\f[B]\f[CB]list\f[B]\f[R]] [<system>|<component>|<service>] [\f[B]\f[CB]-w\f[B]\f[R]] [\f[B]\f[CB]-W\f[B]\f[R] [<timeout>]] [\f[B]\f[CB]-f\f[B]\f[R] <format>] [<expression>] [\f[B]\f[CB]-s\f[B]\f[R]] [\f[B]\f[CB]-n\f[B]\f[R]] [\f[B]\f[CB]--file\f[B]\f[R] <location>] [\f[B]\f[CB]--tblog_output\f[B]\f[R] <destination>]
Retrieves messages from services matching the specified identifiers and
displays them according to the user preference.
If neither \f[C]-w\f[R] nor \f[C]-W\f[R] is specified, \f[C]tblog\f[R]
will display a snapshot of all messages matching the identifiers
historically.
.RS
.PP
You can limit the count of received but not yet printed log entries to
prevent high memory usage.
This limit is specified in the \f[C]TBRICKS_TBLOG_SNAPSHOT_SIZE\f[R]
environment variable.
The default value is 30000.
The 0 value means no snapshot limit.
.TP
\f[B]\f[CB]-w\f[B]\f[R]
Wait for new messages in addition to historical snapshot.
.TP
\f[B]\f[CB]-W\f[B]\f[R] [<timeout>]
Wait for new messages without any historical snapshot.
You can specify time-out as number of hours, minutes, or seconds,
e.g.\ 1h, 30m, 10s.
Value without suffix specifies the number of seconds.
.TP
\f[B]\f[CB]-c\f[B]\f[R]
Do not print the actual messages, only count the number of log messages
for each value of the specified message attribute.
This is especially useful with the \f[B]Level\f[R] attribute.
See the \f[C]-f\f[R] key description for the information on other
available attributes.
.TP
\f[B]\f[CB]-f\f[B]\f[R]
Optionally specify the output format from \f[C]tblog\f[R].
If the key is not explicitly specified, tblog will additionally try to
pick up a format from the TBRICKS_TBLOG_FORMAT environment variable.
.RS
.PP
The following possible pre-defined output formats are available:
.IP \[bu] 2
Default \[lq]def\[rq] (easy readability)
.IP \[bu] 2
Debug \[lq]deb\[rq] (full debug output including all attributes for
in-depth troubleshooting)
.IP \[bu] 2
Raw \[lq]raw\[rq] (machine readable key/value pairs for machine
processing)
.IP \[bu] 2
FIX \[lq]fix\[rq] (XML formatted output of FIX messages, valid for
\[lq]-k fix\[rq] only)
.IP \[bu] 2
FIX \[lq]fixraw\[rq] (raw output of FIX messages, valid for \[lq]-k
fix\[rq] only)
.IP \[bu] 2
Development \[lq]dev\[rq] (internal to Tbricks)
.PP
The value of the format argument may also be a custom print format
string.
A custom format should in most cases be enclosed in single quotes to
prevent the shell from substituting special characters and breaking at
white spaces.
.PP
Custom format strings may include variables of the form \f[C]$Time\f[R]
(or \f[C]$(Time)\f[R] if the variable is not delimited by white space)
which will be expanded to the value of corresponding message attribute.
Attributes are message-dependent, and attributes available in each
particular message can be obtained using the \f[C]-f raw\f[R] format.
.PP
However, a following set of attributes should be always available:
.IP \[bu] 2
Time - date and time when a business object (e.g.\ trade, order) was
created within the system
.IP \[bu] 2
Host - host DNS name
.IP \[bu] 2
Application - application log name
.IP \[bu] 2
File - log file
.IP \[bu] 2
Log - log layer name
.IP \[bu] 2
Level - log level
.IP \[bu] 2
Line - log line
.IP \[bu] 2
LWP - identifier of log LWP
.IP \[bu] 2
Message - log string message
.IP \[bu] 2
Process - application process identifier
.IP \[bu] 2
ThreadName - thread name of log message source
.IP \[bu] 2
Name - if available, a human-readable display name for the session
identifier.
This is typically the name of the strategy engine instance or other
connecting service.
If unavailable, has the same value as Application
.RE
.PP
Different mode of coloring \f[C]tblog\f[R] output is available.
Use the \f[C]TBRICKS_TBLOG_FORMAT=x\f[R] environment variable to change
a default coloring schema (0 is coloring disabled).
By default, only output to terminal will be colored.
.TP
\f[B]\f[CB]-a\f[B]\f[R]
Match all messages (can be extremely resource intensive).
This switch is ignored if specified with any other switches.
.TP
\f[B]\f[CB]-k\f[B]\f[R]
Key to match an expression, multiple keys are AND:ed together.
.TP
\f[B]\f[CB]-o\f[B]\f[R]
Keys after this option should be OR:ed together with the first sequence.
.TP
\f[B]\f[CB]-s\f[B]\f[R]
Print statistics about count of received messages per component (if
there were any) at the end of execution.
.TP
\f[B]\f[CB]-n\f[B]\f[R]
Do not translate UUIDs into symbolic names.
If this option is set, \f[C]tblog\f[R] will not create additional
connection to Metadata service and Distribution Center.
.TP
\f[B]\f[CB]--file\f[B]\f[R] <file_or_directory>
Specify source as DB storage.
.TP
\f[B]\f[CB]--tblog_output\f[B]\f[R] <destination>
Set destination.
The following types are available:
.RS
.IP \[bu] 2
stdout://
.RS 2
.PP
Print logs to stdout.
.RE
.IP \[bu] 2
stderr://
.RS 2
.PP
Print logs to stderr.
.RE
.IP \[bu] 2
file:///path/to/file.log
.RS 2
.PP
Save logs to text file.
.RE
.IP \[bu] 2
db:///path/to/db_storage
.RS 2
.PP
Save logs in DB storage.
.RE
.RE
.PP
An expression is typically defined to specify which log messages should
be displayed.
.PP
If neither the environment variable nor the command line are specified
to define an expression, the default expression showing the last 24
hours messages with the \f[B]warning\f[R] severity level or less will be
used.
.PP
The \f[C]level\f[R] key is slightly special\[em]if it is not specified
as part of the expression, the default \f[B]level\f[R] key filter is
turned on.
.PP
An additional environment variable \f[C]TBRICKS_TBLOG_LEVEL\f[R] can be
set to define the default severity level of messages that will match.
If it is not set, the default is \f[B]warning\f[R] (this corresponds to
\f[C]-k level le warning\f[R] being added to each expression).
.PP
If any part of the expression refers to the \f[C]level\f[R] key, the
above environment variable will be disregarded.
.RE
.TP
\f[B]\f[CB]tblog destroy\f[B]\f[R] <system>|<component>|<service> [<expression>]
Remove all log messages matching the specified expression from
persistent storage.
.RS
.TP
\f[B]\f[CB]-a\f[B]\f[R]
Match all messages.
This switch is ignored if specified with any other switches.
.TP
\f[B]\f[CB]-k\f[B]\f[R]
Key to match an expression, multiple keys are AND:ed together.
.TP
\f[B]\f[CB]-o\f[B]\f[R]
Keys after this option should be OR:ed together with the first sequence.
.PP
An expression can be used to specify which log messages should be
removed.
.PP
If no expression is specified, the default expression matching logs
older than 1 month and with the severity of notice or greater will be
used.
.PP
For administration servers logs, to remove both log databases and text
log files, specify the \f[C]-a\f[R] option.
.RE
.TP
\f[B]\f[CB]tblog resolve\f[B]\f[R]|\f[B]\f[CB]name\f[B]\f[R] [<uuid>|<input_file>] [<system>] [<expression>]
Resolve UUID names for a given UUID or a text file.
For this, \f[C]tblog\f[R] connects to core components and resolves some
of their UUIDs including instrument groups UUIDs.
Note that to resolve instruments UUIDs, you must specify them directly
in the arguments.
.RS
.PP
If no UUID or input file is given, command reads from stdin.
.PP
If UUID is specified, it returns UUID name, creation time, and name of
the message that created given UUID.
It also allows to resolve instrument UUIDs.
.PP
Command requires a system to work.
System can be set using command line argument or the
\f[C]TBRICKS_SYSTEM\f[R] environment variable, where command line
argument takes priority.
If no system is set, UUID is searched in all available systems, possibly
filtered by expression (e.g.\ \f[C]-k system Aeq test\f[R] will search
the \f[B]test\f[R] prefix in all systems).
.RE
.TP
\f[B]\f[CB]tblog history\f[B]\f[R] [\f[B]\f[CB]-a\f[B]\f[R]] [<expression>]
Show command line history of \f[C]tblog\f[R] invocations.
.RS
.TP
\f[B]\f[CB]-a\f[B]\f[R]
Match history for all admin tools (\f[C]tbcomponent\f[R],
\f[C]tbsystem\f[R], etc.).
This switch is ignored if specified with any other switches.
.RE
.PP
\f[B]Collecting logs of \f[CB]tblog\f[B]\f[R]
.TP
\f[B]\f[CB]tblog -l\f[B]\f[R] <filename> [\f[B]\f[CB]-d\f[B]\f[R] <level>] <subcommand\&...>
.TP
\f[B]\f[CB]-l\f[B]\f[R] <filename>
Enable log collecting of \f[C]tblog\f[R] and save logs to the
<filename>.log file.
.TP
\f[B]\f[CB]-d\f[B]\f[R] <level>
Set logging level for \f[C]tblog\f[R] logs.
Default is \f[B]status\f[R].
.RS
.PP
Please note that these keys must be placed in exactly this order
(\f[C]-l\f[R] first, then \f[C]-d\f[R]) and that any subcommands should
go after these keys.
Examples are provided in the next section.
.RE
.SS EXAMPLES
.PP
\f[B]Show all log entries for a system for the last 24 hours with the
\f[CB]warning\f[B] severity or higher\f[R]
.IP
.nf
\f[C]
   $ tblog sys1
   2007-07-05 16:27:24.063 CEST dev2 strategy_manager[27121] <notice>: Successfully loaded strategy defintion [com.tbricks.order]
   2007-07-05 16:27:24.065 CEST dev2 strategy_manager[27121] <notice>: Successfully loaded strategy defintion [com.tbricks.iceberg order]
   2007-07-05 16:27:24.066 CEST dev2 strategy_manager[27121] <notice>: Successfully loaded strategy defintion [com.tbricks.market order]
   2007-07-05 16:27:24.066 CEST dev2 strategy_manager[27121] <notice>: Successfully loaded strategy defintion [com.tbricks.stop order]
   .
   .
   .
   $
\f[R]
.fi
.PP
\f[B]Show all log entries for a system for a specified date with the
\f[CB]notice\f[B] level using custom formatting\f[R]
.IP
.nf
\f[C]
   $ tblog sys1 -f \[aq]Log: $Time <$(Level)>: $(Message)\[aq] -k date 20070705 -k level notice
   Log: 2007-07-05 <notice>: Successfully loaded strategy defintion [com.tbricks.order]
   Log: 2007-07-05 <notice>: Successfully loaded strategy defintion [com.tbricks.iceberg order]
   Log: 2007-07-05 <notice>: Successfully loaded strategy defintion [com.tbricks.market order]
   Log: 2007-07-05 <notice>: Successfully loaded strategy defintion [com.tbricks.stop order]
   .
   .
   .
   $
\f[R]
.fi
.PP
\f[B]Show count of log entries by level, using custom formatting for
easier processing\f[R]
.IP
.nf
\f[C]
   $ tblog test -f \[aq]$Level\[aq] | sort | uniq -c
   Received 43 messages from 8 services, total running time was 1 second.
         4 error
        39 warning
   $
\f[R]
.fi
.PP
\f[B]List the default set of filtering keys that always are available in
a message\f[R]
.IP
.nf
\f[C]
   $ tblog
   tblog usage:

   tblog help

   tblog [list] [<system>|<component>|<service>] [-wW] [-f <format>] [<expression>] [-s]

   tblog destroy <system>|<component>|<service> [<expression>]

   Default keys:
   -------------
   level
   date
   layer
   plugin
   plugin.type
   plugin.type_id
   plugin.owner
   plugin.owner_id
   plugin.creator
   plugin.creator_id
   plugin.root_id
   plugin.parent_id
   plugin.name
   service
   service_type
   component
   component_type
   system
   fix (only \[aq]has this key\[aq] condition)
   internal (only \[aq]has this key\[aq] condition)
   message
   $
\f[R]
.fi
.PP
\f[B]Export log entries for a service in raw format so they can be read
by tblog at a remote location\f[R]
.IP
.nf
\f[C]
   $ tblog ser8 -f raw >/tmp/logmessages.raw
   $
   .fi
\f[R]
.fi
.PP
\f[B]Display FIX messages similarly to raw representation, but with
printable field delimiter (e.g.\ \[lq]|\[rq])\f[R]
.IP
.nf
\f[C]
   $ tblog ser1 -k fix
   $
\f[R]
.fi
.PP
\f[B]Display FIX messages as is, raw representation\f[R]
.IP
.nf
\f[C]
   $ tblog ser1 -k fix -f fixraw
   $
\f[R]
.fi
.PP
\f[B]Display FIX messages as XML (not FIXML!)\f[R]
.IP
.nf
\f[C]
   $ tblog ser1 -k fix -f fix
   $
\f[R]
.fi
.PP
\f[B]Delete all log entries for a service older than 1 month and with
the \f[CB]notice\f[B] severity or less\f[R]
.IP
.nf
\f[C]
   $ tblog destroy ser1
   $
\f[R]
.fi
.PP
\f[B]Delete all debug log entries\f[R]
.IP
.nf
\f[C]
   $ tblog destroy -k level eq debug
   $
\f[R]
.fi
.PP
\f[B]Delete all log messages for a service\f[R]
.IP
.nf
\f[C]
   $ tblog destroy ser7 -a
   $
\f[R]
.fi
.PP
\f[B]Display all strategy log entries for the production system for the
last 24 hours of \f[CB]warning\f[B] severity or higher\f[R]
.IP
.nf
\f[C]
   $ tblog production -k plugin
   $
\f[R]
.fi
.PP
\f[B]Display Quality of Service counters for a service\f[R]
.IP
.nf
\f[C]
   $ tblog ser1 -k qos
   618, 0
   619, 620
   851, 0
   852, 0
   853, 0
   623, 0.36
   624, 0.36
   625, 0.64
   948, 0
   .
   .
   .
   $
\f[R]
.fi
.PP
\f[B]Display history of tbsystem execution by user\f[R]
.IP
.nf
\f[C]
   $ tblog -k history -k utility tbsystem
\f[R]
.fi
.PP
\f[B]Collect live debug logs from Admin Center\f[R]
.IP
.nf
\f[C]
   $ tblog ac -k admin -k level le debug -W
\f[R]
.fi
.PP
\f[B]Collect live protocol logs from Distribution Center and the
\f[CB]node1\f[B] node at the same time\f[R]
.IP
.nf
\f[C]
   $ tblog dc node1 -k admin -k protocol
\f[R]
.fi
.PP
\f[B]Collect logs from services whose names contain \f[CB]f1\f[B]. Show
name and time\f[R]
.IP
.nf
\f[C]
   $ tblog -k service Seq f1 -f \[aq]$Name: $Time\[aq]
   2 services and 0 log readers found.
   prd_trf1\[at]user: 2017-06-26 09:26:18.678621 IST
   prd_mdf1\[at]user: 2017-06-26 09:26:19.437873 IST
\f[R]
.fi
.PP
\f[B]Collect logs from services whose names have prefix
\f[CB]prd_md\f[B]. Show name and time\f[R]
.IP
.nf
\f[C]
   $ tblog -k service Aeq prd_md -f \[aq]$Name: $Time\[aq]
   prd_mdf1\[at]user: 2017-06-26 09:26:19.437873 IST
\f[R]
.fi
.PP
\f[B]Collect admin logs, while saving tblog own \f[CB]dump\f[B]-level
logs in file \f[CB]mylog.log\f[B]\f[R]
.IP
.nf
\f[C]
   $ tblog -l mylog -d dump -k admin
   ...
   $
\f[R]
.fi
.PP
\f[B]Count log messages per \f[CB]Level\f[B] attribute\f[R]
.IP
.nf
\f[C]
   $ tblog test_sys -c Level
   Statistics for \[aq]Level\[aq]:
   warning: 4
\f[R]
.fi
.PP
\f[B]Destroy log messages of Admin Center\f[R]
.IP
.nf
\f[C]
   $ tblog destroy ac -k admin -a
   Log destroy request completed successfully for component AdminCenter\[at]tbricks_admin_system
   1 log destroy request processed (total running time was 1 second)
\f[R]
.fi
.SH EXIT STATUS
.PP
The following exit values are returned:
.IP \[bu] 2
0: Successful completion.
.IP \[bu] 2
1: An error occurred.
.IP \[bu] 2
2: Invalid command line options were specified.
.SH SEE ALSO
.PP
\f[C]tbintro\f[R](1), \f[C]tbaudit\f[R](1), \f[C]tbcomponent\f[R](1),
\f[C]tbcore\f[R](1), \f[C]tblog\f[R](1), \f[C]tbnode\f[R](1),
\f[C]tbrelease\f[R](1), \f[C]tbresource\f[R](1), \f[C]tbservice\f[R](1),
\f[C]tbsubsystem\f[R](1), \f[C]tbsystem\f[R](1), \f[C]tbuser\f[R](1)
