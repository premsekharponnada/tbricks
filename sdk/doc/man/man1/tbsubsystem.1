.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "tbsubsystem" "1" "2020-06-02" "Tbricks" "tbsubsystem man page"
.hy
.SH NAME
.PP
\f[C]tbsubsystem\f[R] \[en] configures logical partitions of systems.
.SH SYNOPSIS
.PP
\f[C]tbsubsystem\f[R] [\f[C]help\f[R]]
.PP
\f[C]tbsubsystem create\f[R] <subsystem> <system>
.PP
\f[C]tbsubsystem destroy\f[R] [\f[C]-fv\f[R]] <subsystem> <system>
.PP
\f[C]tbsubsystem list\f[R]
.PP
\f[C]tbsubsystem set\f[R]
.PP
\f[C]tbsubsystem set\f[R] <property>=<value> <subsystem> <system>
.PP
\f[C]tbsubsystem clear\f[R]
.PP
\f[C]tbsubsystem clear\f[R] <property>[,<property>\&...] <subsystem>
<system>
.PP
\f[C]tbsubsystem get\f[R]
.PP
\f[C]tbsubsystem get\f[R] [<property>[,<property>\&...]] <subsystem>
<system>
.PP
\f[C]tbsubsystem history\f[R]
.SH DESCRIPTION
.PP
The \f[C]tbsubsystem\f[R] command configures logical partitions of
Tbricks systems (\f[C]tbsystem\f[R](1)).
This is used to efficiently set up partitioned systems when running a
proximity hosted set of Strategy Engines.
.PP
A subsystem is a logical collection of Tbricks services that usually are
located at one geographical location.
.PP
Each system always have one default main subsystem which have the
\f[C]default\f[R] configuration property set.
.SS Identifiers
.PP
Please see tbintro(1) for information about the identifiers used.
.SS Properties
.PP
Every subsystem has a set of properties that are accessible to the
services in the system which are typically used for presentation
purposes.
.PP
The identifier provides a persistent unique identifier (an UUID), that
is assigned at creation time.
It is typically used for cross references and/or scripts which require
that the identifier does not change.
The identifier cannot be changed by a user.
.TP
\f[B]\f[CB]identifier\f[B]\f[R]
The UUID uniquely identifying this subsystem.
.TP
\f[B]\f[CB]system\f[B]\f[R]
The system to which the service is belongs.
.TP
\f[B]\f[CB]default\f[B]\f[R]
True if this is the main, default subsystem that was automatically
created together with the system.
.PP
\f[B]The following properties can be set by a user:\f[R]
.TP
\f[B]\f[CB]short_name\f[B]\f[R]
A short name that is used to identify the subsystem.
.PP
\f[B]The following properties specify display attributes for the
subsystem. These and the remaining properties below can be set.\f[R]
.TP
\f[B]\f[CB]name\f[B]\f[R]
The display name of the subsystem.
The default name is \f[B]Subsystem <short_name>\f[R].
.TP
\f[B]\f[CB]description\f[B]\f[R]
The detailed description of the subsystem and its location.
By default it is empty.
.SH SUBCOMMANDS
.PP
All subcommands that modify state are logged persistently to the history
log in their original form.
.PP
The tbsubsystem command provides subcommands to create and destroy
subsystems, and provide information about the subsystems.
.PP
\f[B]The following subcommands are supported:\f[R]
.TP
\f[B]\f[CB]tbsubsystem\f[B]\f[R] [\f[B]\f[CB]help\f[B]\f[R]]
Displays usage of the tool, including available subcommands and options.
.TP
\f[B]\f[CB]tbsubsystem create\f[B]\f[R] <subsystem> <system>
Creates a new tbricks subsystem with the specified short name.
.RS
.PP
The tool validates that the short name is unique.
If not, an error will be returned and the user expected to select a
different short name.
.PP
The system parameter is also validated and assigned to the system
property for the subsystem accordingly.
.RE
.TP
\f[B]\f[CB]tbsubsystem destroy\f[B]\f[R] [\f[B]\f[CB]-fv\f[B]\f[R]] <subsystem> <system>
Destroys the given subsystem and removes it permanently.
.RS
.PP
If there are services still configured for the subsystem, this command
will return an error.
.TP
\f[B]\f[CB]-f\f[B]\f[R]
Use force.
Destroy all components and services which have the subsystem property
set to the specified subsystem, before destroying the subsystem.
This will permanently make them unavailable and destroy their databases.
.TP
\f[B]\f[CB]-v\f[B]\f[R]
Provide verbose information about the operation.
.RE
.TP
\f[B]\f[CB]tbsubsystem list\f[B]\f[R]
Lists all available subsystems configured.
.TP
\f[B]\f[CB]tbsubsystem set\f[B]\f[R]
Lists all possible properties that can be set.
.TP
\f[B]\f[CB]tbsubsystem set\f[B]\f[R] <property>=<value> <subsystem> <system>
Sets the property to the given value for the subsystem.
.RS
.PP
Only some properties can be edited.
See the \f[B]Properties\f[R] section for more information on what
properties can be set and acceptable values.
.RE
.TP
\f[B]\f[CB]tbsubsystem clear\f[B]\f[R]
Lists all possible properties that can be cleared.
.TP
\f[B]\f[CB]tbsubsystem clear\f[B]\f[R] <property>[,<property>\&...] <subsystem> <system>
Clears values for the given properties for the specified subsystem.
.TP
\f[B]\f[CB]tbsubsystem get\f[B]\f[R]
Lists possible subsystem properties that can be viewed.
.TP
\f[B]\f[CB]tbsubsystem get\f[B]\f[R] [<property>[,<property>\&...]] <subsystem> <system>
Displays the property information either for the specified properties,
or for all properties by default for the subsystem.
.TP
\f[B]\f[CB]tbsubsystem history\f[B]\f[R]
Displays the history of all \f[C]tbsubsystem\f[R] commands successfully
issued that affect persisted state.
The history output provides information on from which node, what user,
and what command was issued at what point in time.
.SH OPTIONS
.TP
\f[B]\f[CB]--parsable\f[B]\f[R]
When used in conjunction with subcommands, the output is displayed in a
machine-parsable format.
.SH EXAMPLES
.PP
\f[B]Creating a tbricks subsystem\f[R]
.IP
.nf
\f[C]
   $ tbsubsystem create subsys1 production
   $
\f[R]
.fi
.PP
\f[B]Destroying a subsystem\f[R]
.IP
.nf
\f[C]
   $ tbsubsystem destroy subsys2
   $
\f[R]
.fi
.PP
\f[B]Destroying a system forcibly\f[R]
.IP
.nf
\f[C]
   $ tbsubsystem destroy subsys1 production
   Can\[aq]t destroy subsys1 \[dq]LSE\[dq], the following services are still in use:
   Strategy Engine (ser1)
   Order Persistence (ser3)
   Trading (ser7)
   $
   $ tbsubsystem destroy -fv subsys1 production
   Reference to subsys1 removed from service ser1.
   Reference to subsys1 removed from service ser3.
   Reference to subsys1 removed from service ser7.
   Subsystem subsys1 destroyed.
   $
\f[R]
.fi
.PP
\f[B]Listing all available subsystems\f[R]
.IP
.nf
\f[C]
   $ tbsubsystem list
   System Subsystem Name
   --------------------------------------------
   Production default Default
   Production subsys1 LSE
   Production subsys2 OMX
   Production subsys3 BrokerX
   Test default Default
   $
\f[R]
.fi
.PP
\f[B]Setting a subsystem property\f[R]
.IP
.nf
\f[C]
   $ tbsubsystem set name=\[dq]LSE\[dq] subsys1 production
   $
\f[R]
.fi
.PP
\f[B]Getting a system property\f[R]
.IP
.nf
\f[C]
   $ tbsubsystem get name subsys1 productoin
   LSE
   $
\f[R]
.fi
.PP
\f[B]Getting all subsystem properties\f[R]
.IP
.nf
\f[C]
   $ tbsubsystem get subsys3 production
   name: Broker1
   description: Subsystem hosted at Broker X at location Y.
   short_name: subsys3
   system: production
   identifier: 4ad98283-1dd2-11b2-8b91-00144f2a13b0
   $
\f[R]
.fi
.SH EXIT STATUS
.PP
The following exit values are returned:
.IP \[bu] 2
0: Successful completion.
.IP \[bu] 2
1: An error occurred.
.IP \[bu] 2
2: Invalid command line options were specified.
.SH SEE ALSO
.PP
\f[C]tbintro\f[R](1), \f[C]tbaudit\f[R](1), \f[C]tbcomponent\f[R](1),
\f[C]tbcore\f[R](1), \f[C]tblog\f[R](1), \f[C]tbnode\f[R](1),
\f[C]tbrelease\f[R](1), \f[C]tbresource\f[R](1), \f[C]tbservice\f[R](1),
\f[C]tbsubsystem\f[R](1), \f[C]tbsystem\f[R](1), \f[C]tbuser\f[R](1)
