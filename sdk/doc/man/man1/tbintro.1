.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "tbintro" "1" "2020-06-02" "Tbricks" "tbintro man page"
.hy
.SH NAME
.PP
\f[C]tbintro\f[R] \[en] configures logical Tbricks systems.
.SH DESCRIPTION
.PP
Intro is an introduction to Tbricks administrative commands.
.PP
This page describes common characteristics for all Tbricks
administrative tools and provides an introduction to relevant
identifiers used by the tools.
.SS Administrative infrastructure
.PP
The administrative infrastructure consists of the following components:
.TP
AdminCenter
Central administration configuration repository that stores all
configuration information.
It provides all AdminAgents with the relevant configuration information.
This is the primary interaction point for the admin tools.
.TP
AdminAgent
One agent runs on each host to make it available as a node in the
system.
The admin agent is responsible for starting, stopping and monitoring
components as well as extracting data from log files for non-running
components.
.TP
DistributionCenter
Provides an internal service for distributing resources to all the
nodes.
.PP
The tools by default operates on the first AdminCenter found by using
Zeroconf, which is the correct behavior for almost all installations.
.PP
The AdminCenter will let the tool know whether it previously has
detected additional AdminCenters in the network.
.PP
If the tool detects multiple AdminCenters, it will abort and ask for the
environment variable to be set.
.PP
Most installations will only have a single AdminCenter, the exception
typically being experimental lab setups.
.PP
If multiple AdminCenters are available, to specify the one to operate,
set the \f[B]TBRICKS_ADMIN_CENTER\f[R] environment variable:
.IP
.nf
\f[C]
setenv TBRICKS_ADMIN_CENTER adm2
\f[R]
.fi
.PP
This corresponds to the Zeroconf name used by the admin center.
.SS Identifiers
.PP
There are several ways to uniquely identify systems, components, nodes,
resources, services, tracing sessions, and templates from the command
line.
.PP
The following identifiers are provided for each entity:
.TP
\f[B]\f[CB]system\f[B]\f[R]
A tbricks system.
A system can either be specified by using the short name property that
was allocated when the system was created, or by using the system UUID.
.TP
\f[B]\f[CB]subsystem\f[B]\f[R]
A tbricks subsystem.
A subsystem can either be specified by using the short name property
that was allocated when the subsystem was created, or by using the
subsystem UUID.
Each system always have the \f[B]default\f[R] subsystem.
.TP
\f[B]\f[CB]component\f[B]\f[R]
A tbricks component.
A component can either be specified by using the short name property
that was allocated when the component was created, or by using the
component UUID.
.TP
\f[B]\f[CB]service\f[B]\f[R]
A tbricks service.
A service can either be specified by using the short name property that
was allocated when the service was created, or by using the service
UUID.
.TP
\f[B]\f[CB]node\f[B]\f[R]
A tbricks node.
A node can either be specified by using the short name property that was
allocated when the node was created, or by using the node UUID.
.TP
\f[B]\f[CB]plug-in\f[B]\f[R]
A plug-in that is used by one of the Engines.
A plug-in is referenced using the name specified in the manifest.
.TP
\f[B]\f[CB]user\f[B]\f[R]
A tbricks user.
A user can either be specified by using the short name property that was
allocated when the user was created, or by using the user UUID.
.TP
\f[B]\f[CB]resource\f[B]\f[R]
A tbricks resource.
A resource can either be specified by using the short name property that
was allocated when the resource was created, or by using the resource
UUID.
.TP
\f[B]\f[CB]tracing session\f[B]\f[R]
A tbricks tracing session.
A tracing session is an object describing measurement process.
Running session can produce LTTng data stored on disk.
.TP
\f[B]\f[CB]tracing template\f[B]\f[R]
A tbricks tracing template.
Tracing template defines what to trace.
.TP
\f[B]\f[CB]release\f[B]\f[R]
A tbricks release.
A release is referred to by using its numerical identifier that is
automatically assigned to the version property when the release is
imported.
This can be e.g.\ \f[B]1.0\f[R] for a release.
.TP
\f[B]\f[CB]patch\f[B]\f[R]
A tbricks patch.
A patch is referred to by using its numerical identifier that is
automatically assigned to the \f[B]patchversion\f[R] property when the
patch is imported.
This can be e.g.\ \f[B]3047\f[R] for a patch.
.PP
\f[B]There are also identifiers for file system entities that are used
by some commands:\f[R]
.TP
\f[B]\f[CB]filename\f[B]\f[R]
A file path in the local file system.
.TP
\f[B]\f[CB]directory\f[B]\f[R]
A directory path in the local file system.
.SS Paths
.PP
There are a number of path properties that are used in the system to
specify where to persist data and logs as well as where to find
additional resources, such as configuration files and other resources.
.PP
\f[B]The path properties can be divided into two distinctive
categories:\f[R]
.TP
Root paths
A base path which is used as the template which is expanded by the
component.
.TP
Paths
Actual paths that can either be relative, in which case they expand on a
corresponding root path, or absolute, in which case they point directly
to the relevant location.
.PP
Different entities in the system have different types of path properties
that are applicable:
.IP
.nf
\f[C]
Entity      Type of path properties
-----------------------------------
node        root path
component   root path, path
\f[R]
.fi
.PP
An absolute path could be \f[C]/opt/tbricks/admin/current/\f[R]
.PP
A relative path could be \f[C]mystorage/somedirectory\f[R].
.SS Environment variables
.PP
The following environment variables are provided for the administrative
tools:
.TP
\f[B]\f[CB]TBRICKS_ADMIN_CENTER\f[B]\f[R]
Which Admin Center to connect to if multiple are found using Zeroconf.
.TP
\f[B]\f[CB]TBRICKS_SYSTEM\f[B]\f[R]
Which Tbricks system to operate on if none is specified on the command
line.
.TP
\f[B]\f[CB]TBRICKS_TBLOG_EXECUTION_TIMEOUT\f[B]\f[R]
Time of \f[C]tblog\f[R] execution, in seconds.
When execution time-out is reached, \f[C]tblog\f[R] terminates.
.TP
\f[B]\f[CB]TBRICKS_TBLOG_FORMAT\f[B]\f[R]
Which output format \f[C]tblog\f[R] should use if none is specified on
the command line.
.TP
\f[B]\f[CB]TBRICKS_TBLOG_LEVEL\f[B]\f[R]
User-specified log level threshold used by \f[C]tblog list\f[R].
.TP
\f[B]\f[CB]TBRICKS_TBLOG_EXPRESSION\f[B]\f[R]
User-specified expression to be used by \f[C]tblog list\f[R].
.TP
\f[B]\f[CB]TBRICKS_TBLOG_MAX_QUEUE_SIZE\f[B]\f[R]
Memory limit for pending log entries.
If a value exceeds, messages will be dropped.
Default value is 1 GiB.
.TP
\f[B]\f[CB]TBRICKS_EDITOR\f[B]\f[R]
External editor to use for e.g.\ \f[C]tbresource edit\f[R].
.SH SEE ALSO
.PP
\f[C]tbintro\f[R](1), \f[C]tbaudit\f[R](1), \f[C]tbcomponent\f[R](1),
\f[C]tbcore\f[R](1), \f[C]tblog\f[R](1), \f[C]tbnode\f[R](1),
\f[C]tbrelease\f[R](1), \f[C]tbresource\f[R](1), \f[C]tbservice\f[R](1),
\f[C]tbstrategy\f[R](1), \f[C]tbsubsystem\f[R](1),
\f[C]tbsystem\f[R](1), \f[C]tbuser\f[R](1)
